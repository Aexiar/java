const t='{"documentCount":69,"nextId":69,"documentIds":{"0":"/java/notes/01_java-basic/01_xdx/#第一章-软件设计架构","1":"/java/notes/01_java-basic/01_xdx/#_1-1-概述","2":"/java/notes/01_java-basic/01_xdx/#_1-2-b-s-架构","3":"/java/notes/01_java-basic/01_xdx/#_1-2-1-概述","4":"/java/notes/01_java-basic/01_xdx/#_1-2-2-优点","5":"/java/notes/01_java-basic/01_xdx/#_1-2-3-缺点","6":"/java/notes/01_java-basic/01_xdx/#_1-3-c-s-架构","7":"/java/notes/01_java-basic/01_xdx/#_1-3-1-概述","8":"/java/notes/01_java-basic/01_xdx/#_1-3-2-优点","9":"/java/notes/01_java-basic/01_xdx/#_1-3-3-缺点","10":"/java/notes/01_java-basic/01_xdx/#_1-4-为什么-c-s-架构的应用程序往往功能更强大-性能更强","11":"/java/notes/01_java-basic/01_xdx/#第二章-软件行业中的各种职业方向","12":"/java/notes/01_java-basic/01_xdx/#_2-1-概述","13":"/java/notes/01_java-basic/01_xdx/#_2-2-前端工程师","14":"/java/notes/01_java-basic/01_xdx/#_2-2-1-b-s-架构中的前端工程师","15":"/java/notes/01_java-basic/01_xdx/#_2-2-2-c-s-架构中的前端工程师","16":"/java/notes/01_java-basic/01_xdx/#_2-3-后端工程师","17":"/java/notes/01_java-basic/01_xdx/#_2-3-1-概述","18":"/java/notes/01_java-basic/01_xdx/#_2-3-2-业务逻辑","19":"/java/notes/01_java-basic/01_xdx/#_2-3-3-软件架构","20":"/java/notes/01_java-basic/01_xdx/#_2-3-4-综合应用","21":"/java/notes/01_java-basic/01_xdx/#_2-3-5-后端工程师的其他工作","22":"/java/notes/01_java-basic/01_xdx/#_2-3-6-后端领域中目前主流的语言","23":"/java/notes/01_java-basic/01_xdx/#_2-4-底层开发-系统开发","24":"/java/notes/01_java-basic/01_xdx/#_2-5-算法工程师","25":"/java/notes/01_java-basic/01_xdx/#_2-6-嵌入式工程师","26":"/java/notes/01_java-basic/01_xdx/#第三章-学习建议","27":"/java/notes/01_java-basic/01_xdx/#_3-1-如何学习","28":"/java/notes/01_java-basic/01_xdx/#_3-2-实践建议","29":"/java/notes/02_java-leap/01_xdx/#第一章-程序到底是怎么在计算机中运行的","30":"/java/notes/02_java-leap/01_xdx/#_1-1-回顾冯·诺依曼体系结构","31":"/java/notes/02_java-leap/01_xdx/#_1-2-现代计算机和冯·诺依曼体系结构的关系","32":"/java/notes/02_java-leap/01_xdx/#_1-3-现代-cpu-的结构","33":"/java/notes/02_java-leap/01_xdx/#_1-4-程序到底是怎么在计算机中运行的","34":"/java/notes/02_java-leap/01_xdx/#_1-4-1-概述","35":"/java/notes/02_java-leap/01_xdx/#_1-4-2-编写代码","36":"/java/notes/02_java-leap/01_xdx/#_1-4-3-编译或解释","37":"/java/notes/02_java-leap/01_xdx/#_1-4-4-加载程序","38":"/java/notes/02_java-leap/01_xdx/#_1-4-5-cpu-执行指令","39":"/java/notes/02_java-leap/01_xdx/#_1-4-6-与硬件交互","40":"/java/notes/02_java-leap/01_xdx/#第二章-虚拟地址空间","41":"/java/notes/02_java-leap/01_xdx/#_2-1-概述","42":"/java/notes/02_java-leap/01_xdx/#_2-2-虚拟地址空间模型","43":"/java/notes/02_java-leap/01_xdx/#第三章-虚拟内存地址","44":"/java/notes/02_java-leap/01_xdx/#_3-1-内存和内存地址","45":"/java/notes/02_java-leap/01_xdx/#_3-1-1-内存","46":"/java/notes/02_java-leap/01_xdx/#_3-1-2-内存地址","47":"/java/notes/02_java-leap/01_xdx/#_3-1-3-变量地址","48":"/java/notes/02_java-leap/01_xdx/#_3-2-虚拟内存地址","49":"/java/notes/02_java-leap/01_xdx/#_3-3-高地址和低地址","50":"/java/notes/02_java-leap/01_xdx/#_3-4-小端存储法","51":"/java/notes/02_java-leap/01_xdx/#_3-5-大端存储法","52":"/java/notes/02_java-leap/01_xdx/#第四章-多线程","53":"/java/notes/02_java-leap/01_xdx/#_4-1-概述","54":"/java/notes/02_java-leap/01_xdx/#_4-2-多核-cpu","55":"/java/notes/02_java-leap/01_xdx/#_4-3-什么是线程","56":"/java/notes/02_java-leap/01_xdx/#_4-3-1-概述","57":"/java/notes/02_java-leap/01_xdx/#_4-3-2-进程-process","58":"/java/notes/02_java-leap/01_xdx/#_4-3-3-线程-thread","59":"/java/notes/02_java-leap/01_xdx/#_4-3-4-现实生活中的进程和线程的关系","60":"/java/notes/02_java-leap/01_xdx/#_4-3-5-总结","61":"/java/notes/about/#后端技术栈","62":"/java/notes/about/#前端技术栈","63":"/java/notes/about/#devops","64":"/java/notes/about/#运维技术栈","65":"/java/notes/about/#测试技术栈","66":"/java/notes/about/#开发工具","67":"/java/notes/about/#其他","68":"/java/notes/#java-学科"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,1],"1":[2,2,15],"2":[5,2,1],"3":[3,7,40],"4":[3,7,15],"5":[4,7,12],"6":[5,2,1],"7":[3,7,34],"8":[4,7,8],"9":[3,7,13],"10":[8,2,41],"11":[2,1,1],"12":[3,2,32],"13":[2,2,1],"14":[5,4,68],"15":[4,4,38],"16":[3,2,1],"17":[4,5,8],"18":[3,5,46],"19":[3,5,53],"20":[4,5,36],"21":[4,5,61],"22":[4,5,39],"23":[4,2,21],"24":[3,2,36],"25":[3,2,39],"26":[2,1,1],"27":[4,2,127],"28":[3,2,58],"29":[3,1,1],"30":[3,3,44],"31":[4,3,108],"32":[5,3,66],"33":[4,3,1],"34":[3,5,10],"35":[4,5,10],"36":[4,5,20],"37":[3,5,14],"38":[5,5,26],"39":[4,5,22],"40":[2,1,1],"41":[3,2,73],"42":[2,2,129],"43":[2,1,1],"44":[3,2,1],"45":[3,5,58],"46":[4,5,70],"47":[3,5,42],"48":[3,2,65],"49":[2,2,13],"50":[3,2,55],"51":[3,2,11],"52":[2,1,1],"53":[3,2,15],"54":[4,2,53],"55":[4,2,1],"56":[4,6,32],"57":[6,6,104],"58":[5,6,53],"59":[3,6,4],"60":[4,6,36],"61":[1,1,2],"62":[1,1,2],"63":[1,1,2],"64":[1,1,2],"65":[1,1,2],"66":[1,1,2],"67":[1,1,2],"68":[2,1,1]},"averageFieldLength":[3.2028985507246377,3.2753623188405796,29.014492753623184],"storedFields":{"0":{"title":"第一章：软件设计架构","titles":[]},"1":{"title":"1.1 概述","titles":["第一章：软件设计架构"]},"2":{"title":"1.2 B/S 架构","titles":["第一章：软件设计架构"]},"3":{"title":"1.2.1 概述","titles":["第一章：软件设计架构","1.2 B/S 架构"]},"4":{"title":"1.2.2 优点","titles":["第一章：软件设计架构","1.2 B/S 架构"]},"5":{"title":"1.2.3 缺点","titles":["第一章：软件设计架构","1.2 B/S 架构"]},"6":{"title":"1.3 C/S 架构","titles":["第一章：软件设计架构"]},"7":{"title":"1.3.1 概述","titles":["第一章：软件设计架构","1.3 C/S 架构"]},"8":{"title":"1.3.2 优点","titles":["第一章：软件设计架构","1.3 C/S 架构"]},"9":{"title":"1.3.3 缺点","titles":["第一章：软件设计架构","1.3 C/S 架构"]},"10":{"title":"1.4 为什么 C/S 架构的应用程序往往功能更强大，性能更强？","titles":["第一章：软件设计架构"]},"11":{"title":"第二章：软件行业中的各种职业方向","titles":[]},"12":{"title":"2.1 概述","titles":["第二章：软件行业中的各种职业方向"]},"13":{"title":"2.2 前端工程师","titles":["第二章：软件行业中的各种职业方向"]},"14":{"title":"2.2.1 B/S 架构中的前端工程师","titles":["第二章：软件行业中的各种职业方向","2.2 前端工程师"]},"15":{"title":"2.2.2 C/S 架构中的前端工程师","titles":["第二章：软件行业中的各种职业方向","2.2 前端工程师"]},"16":{"title":"2.3 后端工程师","titles":["第二章：软件行业中的各种职业方向"]},"17":{"title":"2.3.1 概述","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"18":{"title":"2.3.2 业务逻辑","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"19":{"title":"2.3.3 软件架构","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"20":{"title":"2.3.4 综合应用","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"21":{"title":"2.3.5 后端工程师的其他工作","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"22":{"title":"2.3.6 后端领域中目前主流的语言","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"23":{"title":"2.4 底层开发/系统开发","titles":["第二章：软件行业中的各种职业方向"]},"24":{"title":"2.5 算法工程师","titles":["第二章：软件行业中的各种职业方向"]},"25":{"title":"2.6 嵌入式工程师","titles":["第二章：软件行业中的各种职业方向"]},"26":{"title":"第三章：学习建议","titles":[]},"27":{"title":"3.1 如何学习？","titles":["第三章：学习建议"]},"28":{"title":"3.2 实践建议","titles":["第三章：学习建议"]},"29":{"title":"第一章：程序到底是怎么在计算机中运行的？","titles":[]},"30":{"title":"1.1 回顾冯·诺依曼体系结构","titles":["第一章：程序到底是怎么在计算机中运行的？"]},"31":{"title":"1.2 现代计算机和冯·诺依曼体系结构的关系","titles":["第一章：程序到底是怎么在计算机中运行的？"]},"32":{"title":"1.3 现代 CPU 的结构","titles":["第一章：程序到底是怎么在计算机中运行的？"]},"33":{"title":"1.4 程序到底是怎么在计算机中运行的？","titles":["第一章：程序到底是怎么在计算机中运行的？"]},"34":{"title":"1.4.1 概述","titles":["第一章：程序到底是怎么在计算机中运行的？","1.4 程序到底是怎么在计算机中运行的？"]},"35":{"title":"1.4.2 编写代码","titles":["第一章：程序到底是怎么在计算机中运行的？","1.4 程序到底是怎么在计算机中运行的？"]},"36":{"title":"1.4.3 编译或解释","titles":["第一章：程序到底是怎么在计算机中运行的？","1.4 程序到底是怎么在计算机中运行的？"]},"37":{"title":"1.4.4 加载程序","titles":["第一章：程序到底是怎么在计算机中运行的？","1.4 程序到底是怎么在计算机中运行的？"]},"38":{"title":"1.4.5 CPU 执行指令","titles":["第一章：程序到底是怎么在计算机中运行的？","1.4 程序到底是怎么在计算机中运行的？"]},"39":{"title":"1.4.6 与硬件交互","titles":["第一章：程序到底是怎么在计算机中运行的？","1.4 程序到底是怎么在计算机中运行的？"]},"40":{"title":"第二章：虚拟地址空间","titles":[]},"41":{"title":"2.1 概述","titles":["第二章：虚拟地址空间"]},"42":{"title":"2.2 虚拟地址空间模型","titles":["第二章：虚拟地址空间"]},"43":{"title":"第三章：虚拟内存地址","titles":[]},"44":{"title":"3.1 内存和内存地址","titles":["第三章：虚拟内存地址"]},"45":{"title":"3.1.1 内存","titles":["第三章：虚拟内存地址","3.1 内存和内存地址"]},"46":{"title":"3.1.2 内存地址","titles":["第三章：虚拟内存地址","3.1 内存和内存地址"]},"47":{"title":"3.1.3 变量地址","titles":["第三章：虚拟内存地址","3.1 内存和内存地址"]},"48":{"title":"3.2 虚拟内存地址","titles":["第三章：虚拟内存地址"]},"49":{"title":"3.3 高地址和低地址","titles":["第三章：虚拟内存地址"]},"50":{"title":"3.4 小端存储法","titles":["第三章：虚拟内存地址"]},"51":{"title":"3.5 大端存储法","titles":["第三章：虚拟内存地址"]},"52":{"title":"第四章：多线程","titles":[]},"53":{"title":"4.1 概述","titles":["第四章：多线程"]},"54":{"title":"4.2 多核 CPU","titles":["第四章：多线程"]},"55":{"title":"4.3 什么是线程？","titles":["第四章：多线程"]},"56":{"title":"4.3.1 概述","titles":["第四章：多线程","4.3 什么是线程？"]},"57":{"title":"4.3.2 进程（process）","titles":["第四章：多线程","4.3 什么是线程？"]},"58":{"title":"4.3.3 线程(thread)","titles":["第四章：多线程","4.3 什么是线程？"]},"59":{"title":"4.3.4 现实生活中的进程和线程的关系","titles":["第四章：多线程","4.3 什么是线程？"]},"60":{"title":"4.3.5 总结","titles":["第四章：多线程","4.3 什么是线程？"]},"61":{"title":"后端技术栈","titles":[]},"62":{"title":"前端技术栈","titles":[]},"63":{"title":"DevOps","titles":[]},"64":{"title":"运维技术栈","titles":[]},"65":{"title":"测试技术栈","titles":[]},"66":{"title":"开发工具","titles":[]},"67":{"title":"其他","titles":[]},"68":{"title":"Java 学科","titles":[]}},"dirtCount":0,"index":[["测试技术栈",{"0":{"65":1}}],["清理垃圾",{"2":{"60":1}}],["迅雷可以同时下载多个资源",{"2":{"60":1}}],["支持同时和多个好友聊天",{"2":{"60":1}}],["真正负责执行程序的",{"2":{"60":1}}],["真正负责执行程序的是线程",{"2":{"58":1}}],["占用的资源也会被操作系统回收",{"2":{"60":1}}],["死锁等问题",{"2":{"58":1}}],["容易出现数据竞争",{"2":{"58":1}}],["易于调试",{"2":{"58":1}}],["单线程程序编写简单",{"2":{"58":1}}],["单线程程序和多线程程序各有优缺点",{"2":{"58":1}}],["单核",{"2":{"54":1}}],["注意",{"2":{"58":1}}],["静态变量",{"2":{"58":1}}],["thread",{"0":{"58":1}}],["tb",{"2":{"46":1,"48":4}}],["渲染页面",{"2":{"57":1}}],["每次启动都会创建一个新的进程",{"2":{"57":1}}],["每个线程分别负责执行一个任务",{"2":{"58":1}}],["每个独立执行的任务就是一个线程",{"2":{"58":1}}],["每个独立的小单元格",{"2":{"46":1}}],["每个正在执行的应用程序都是一个进程",{"2":{"58":1}}],["每个进程都拥有自己的内存空间和系统资源",{"2":{"57":1}}],["每个核心都能独立的执行计算机指令",{"2":{"54":1}}],["每个核都有独立的",{"2":{"32":1,"53":1}}],["每个内存单元都有一个唯一的地址",{"2":{"46":1}}],["每个内存区域的特点",{"2":{"42":1}}],["每个服务负责不同的业务功能",{"2":{"19":1}}],["打开的文件资源",{"2":{"58":1}}],["打开多个文本编辑器窗口",{"2":{"57":1}}],["打印机等",{"2":{"31":1}}],["时间",{"2":{"57":2}}],["本身不占用",{"2":{"57":1}}],["回收这些资源",{"2":{"57":1}}],["回顾冯",{"0":{"30":1}}],["设备等",{"2":{"57":3,"60":1}}],["设计模式",{"2":{"28":2}}],["设计合理的业务逻辑流程和健壮的架构可以使系统更好地应对不同的业务场景和需求变化",{"2":{"20":1}}],["系列实在是太贵了",{"2":{"57":1}}],["系统会为其创建一个进程",{"2":{"57":1}}],["系统开发主要指的是进行一些系统层面",{"2":{"23":1}}],["系统开发",{"0":{"23":1}}],["系统可以根据业务发展灵活扩展新的服务或功能模块",{"2":{"20":1}}],["系统常用三层架构和",{"2":{"19":1}}],["了",{"2":{"57":1}}],["完全属于图形化的操作系统",{"2":{"57":1}}],["完全可以在没有图形化界面的情况下执行任务",{"2":{"57":1}}],["完成指定的操作",{"2":{"38":1}}],["完成功能",{"2":{"27":1}}],["完成与前端的交互",{"2":{"21":1}}],["线程",{"0":{"58":1}}],["线程和进程的关系非常密切",{"2":{"56":1}}],["线程是进程的一部分",{"2":{"58":1,"60":1}}],["线程是进程中的⼀个执⾏单元",{"2":{"56":1}}],["线程是指机器中连续的",{"2":{"56":1}}],["线程是操作系统能够进行运算调度的最小单位",{"2":{"56":1}}],["又好像没说什么",{"2":{"56":1}}],["好像说了什么",{"2":{"56":1}}],["非常严谨",{"2":{"56":1}}],["非等逻辑操作",{"2":{"31":1}}],["上面的说法完全正确",{"2":{"56":1}}],["上述的组件协同工作",{"2":{"30":1}}],["上述的这些东西都是可以沉淀的",{"2":{"21":1}}],["顺序的属性集合",{"2":{"56":1}}],["顺序执行",{"2":{"30":1}}],["⼀个进程中⾄少有⼀个线程",{"2":{"56":1}}],["什么是线程",{"0":{"55":1},"1":{"56":1,"57":1,"58":1,"59":1,"60":1}}],["让程序的执行效率得到质的提升",{"2":{"54":1}}],["充分利用",{"2":{"54":1}}],["整个运行过程中也就利用了",{"2":{"54":1}}],["整个过程如下",{"2":{"38":1}}],["平板等",{"2":{"54":1}}],["平台有很好的集成和交互",{"2":{"22":1}}],["笔记本电脑",{"2":{"54":1}}],["台式机",{"2":{"54":1}}],["同一时刻可以处理多个任务",{"2":{"54":1}}],["同样的道理",{"2":{"46":1}}],["同样受限于浏览器",{"2":{"5":1}}],["换言之",{"2":{"54":1,"57":1}}],["给",{"2":{"54":1}}],["开始朝着多核的方向发展",{"2":{"54":1}}],["开发工具",{"0":{"66":1}}],["开发语言",{"2":{"15":1}}],["开发的成本高",{"2":{"9":1}}],["开发者无需提供全新的客户端",{"2":{"4":1}}],["到底什么是多线程",{"2":{"53":1}}],["使用大端序列来进行数据传输",{"2":{"51":1}}],["使得",{"2":{"31":1,"32":1}}],["使得指令得以被顺序执行",{"2":{"31":1}}],["使得不同层次的功能更清晰",{"2":{"19":1}}],["选择将此数据的最低有效位字节存储在高内存地址上",{"2":{"51":1}}],["指的是在存储数据时",{"2":{"51":1}}],["指令流水线允许多个指令同时进行不同阶段的处理",{"2":{"32":1}}],["指令流水线",{"2":{"32":1}}],["指令流水线以及超标量单元和多核单元",{"2":{"32":1}}],["指令的取指",{"2":{"31":1}}],["指令由操作码和地址码组成",{"2":{"30":1}}],["指令结构",{"2":{"30":1}}],["指令按照它们在内存中的顺序执行",{"2":{"30":1}}],["↓",{"2":{"50":1}}],["方向却是反的",{"2":{"50":1}}],["方向是↑",{"2":{"50":1}}],["采取的是小端存储法",{"2":{"50":1}}],["有些任务是可以独立执行的",{"2":{"58":1}}],["有些复杂应用",{"2":{"57":1}}],["有些后端工程师也会关注软件架构",{"2":{"20":1}}],["有符号数在计算机底层是采取的二进制补码的形式存储的",{"2":{"50":1}}],["小端存储法",{"0":{"50":1}}],["小米",{"2":{"25":1}}],["字节",{"2":{"48":1}}],["字符串常量等在程序的任何地方都能访问",{"2":{"42":1}}],["个线程",{"2":{"58":1}}],["个内存地址",{"2":{"48":1}}],["个字节内存单元的首地址",{"2":{"47":1}}],["个字节",{"2":{"46":1}}],["709",{"2":{"48":2}}],["744",{"2":{"48":2}}],["次方",{"2":{"48":2}}],["^",{"2":{"48":2}}],["~",{"2":{"48":3}}],["类型的变量",{"2":{"47":2}}],["类型的数据",{"2":{"46":1}}],["首地址",{"2":{"47":1}}],["变量地址就是变量所占虚拟内存空间中的第一个字节的内存地址",{"2":{"47":1}}],["变量地址",{"0":{"47":1},"2":{"47":1}}],["某一个字节区域",{"2":{"46":1}}],["某些高级和复杂的功能可能难以实现",{"2":{"5":1}}],["效率非常高",{"2":{"46":1}}],["效率非常低下",{"2":{"46":1}}],["效率非常低",{"2":{"46":1}}],["效率更高",{"2":{"8":1}}],["kb",{"2":{"46":2}}],["kotlin",{"2":{"15":1}}],["8字节",{"2":{"48":1}}],["8",{"2":{"46":1}}],["答案就是内存地址",{"2":{"46":1}}],["已经保存到内存中",{"2":{"46":1}}],["重要",{"2":{"45":1,"46":2,"56":1}}],["之前",{"2":{"54":1}}],["之前提高",{"2":{"53":1}}],["之前我们在画虚拟内存地址的时候",{"2":{"50":1}}],["之前输入的文字将不复存在",{"2":{"45":1}}],["之所以",{"2":{"46":1}}],["之间的数据交换和操作",{"2":{"31":1}}],["再交给",{"2":{"45":1}}],["再打开同样的文件",{"2":{"45":1}}],["再往后学习",{"2":{"27":1}}],["此时",{"2":{"45":1}}],["落在磁盘上",{"2":{"45":2}}],["生活中最常见的内存类型",{"2":{"45":1}}],["防止数据被修改",{"2":{"42":1}}],["环境下",{"2":{"42":1}}],["环境监测等",{"2":{"25":1}}],["位的虚拟地址空间",{"2":{"49":1}}],["位的操作系统支持的内存最大容量是",{"2":{"48":1}}],["位的操作系统中",{"2":{"48":1}}],["位支持的最大内存通常是",{"2":{"48":1}}],["位支持的最大内存是",{"2":{"48":1}}],["位操作系统的虚拟内存地址范围是",{"2":{"48":2}}],["位操作系统中",{"2":{"47":1,"48":2,"50":1}}],["位",{"2":{"42":1,"48":4}}],["位环境的经典内存模型",{"2":{"42":1}}],["堆内存",{"2":{"58":1}}],["堆内存在程序主动释放之前会一直存在",{"2":{"42":1}}],["堆区的内存由程序员手动管理",{"2":{"42":1}}],["堆区",{"2":{"42":1}}],["放入任何数据",{"2":{"42":1}}],["参数只在当前函数中有效",{"2":{"42":1}}],["返回地址等与函数相关的信息压入栈中",{"2":{"42":1}}],["局部变量",{"2":{"42":1}}],["函数执行结束后",{"2":{"42":1}}],["函数被调用时",{"2":{"42":1}}],["函数参数和返回地址",{"2":{"42":1}}],["随着技术的发展",{"2":{"54":1}}],["随着函数的调用和返回",{"2":{"42":1}}],["随着应用的需求越来越复杂",{"2":{"14":1}}],["栈上的内存由系统自动分配和释放",{"2":{"42":1}}],["栈上的内存会自动分配和释放",{"2":{"42":1}}],["栈是自动管理的",{"2":{"42":1}}],["栈区",{"2":{"42":1}}],["供程序运行时使用",{"2":{"42":1}}],["供后续指令使用",{"2":{"38":1}}],["被加载到内存中特定的区域",{"2":{"42":1}}],["文件",{"2":{"42":1}}],["文件句柄等",{"2":{"37":1,"57":1}}],["动不动就",{"2":{"46":1}}],["动态链接库",{"2":{"42":2}}],["动手能力",{"2":{"27":1}}],["且可以被修改",{"2":{"42":1}}],["且深度和复杂性也确实不及后端开发",{"2":{"14":1}}],["gb",{"2":{"46":2,"48":1}}],["global",{"2":{"42":1}}],["go",{"2":{"22":1}}],["golang",{"2":{"22":1}}],["google",{"2":{"15":1}}],["全局数据区分为初始化数据段",{"2":{"42":1}}],["全局数据区在程序加载到内存后就分配好了",{"2":{"42":1}}],["全局数据区",{"2":{"42":2}}],["全局变量",{"2":{"41":1,"58":1}}],["包括程序代码",{"2":{"57":1}}],["包括",{"2":{"56":1,"57":1,"58":1}}],["包括数据的验证",{"2":{"18":1}}],["包含程序的指令",{"2":{"42":1,"57":1}}],["说明",{"2":{"42":1}}],["下次",{"2":{"45":1}}],["下",{"2":{"42":1}}],["下面是",{"2":{"42":1}}],["特点等皆有不同",{"2":{"42":1}}],["特别适用于高并发",{"2":{"22":1}}],["为例",{"2":{"47":1}}],["为了让操作系统高效的管理",{"2":{"57":1}}],["为了方便管理",{"2":{"46":1}}],["为了更好的管理程序",{"2":{"42":1}}],["为什么",{"0":{"10":1}}],["转换为物理地址",{"2":{"41":1}}],["转换以及持久化",{"2":{"18":1}}],["来将这些虚拟地址",{"2":{"41":1}}],["来提供较高的系统灵活性",{"2":{"19":1}}],["虚拟内存地址",{"0":{"43":1,"48":1},"1":{"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1}}],["虚拟地址",{"2":{"41":1}}],["虚拟地址空间大小为",{"2":{"42":1}}],["虚拟地址空间模型",{"0":{"42":1}}],["虚拟地址空间",{"0":{"40":1},"1":{"41":1,"42":1}}],["虚地址",{"2":{"41":3}}],["那么线程就是工厂中的一条条生产线",{"2":{"59":1}}],["那么",{"2":{"50":1,"53":1}}],["那么内存地址范围就是0000",{"2":{"48":2}}],["那么内存中那么多的数据",{"2":{"46":1}}],["那么刚才输入的文字将丢失",{"2":{"45":1}}],["那么该程序岂不是运行不了",{"2":{"41":1}}],["那么其它程序岂不是运行不了",{"2":{"41":1}}],["那么就可以通过",{"2":{"41":1}}],["物理内存中的内存地址已经被其它程序占用了",{"2":{"41":1}}],["物理内存中的内存地址已经被该程序占用了",{"2":{"41":1}}],["物联网",{"2":{"25":1}}],["正在执行的程序的实例",{"2":{"57":1}}],["正如上面的程序一样",{"2":{"41":1}}],["正确的预测可以避免不必要的指令等待",{"2":{"32":1}}],["进程包含程序执行所需要的全部资源",{"2":{"60":1}}],["进程包含程序执行所需要的全部计算机资源",{"2":{"57":1}}],["进程可以是使操作系统高效地管理计算机资源",{"2":{"60":1}}],["进程可以理解为",{"2":{"57":1}}],["进程只是操作系统为了方便管理计算机资源才创建的",{"2":{"58":1}}],["进程和线程的关系",{"2":{"58":1}}],["进程和程序的关系",{"2":{"57":1}}],["进程是操作系统进行资源分配和调度的基本单位",{"2":{"57":1}}],["进程是程序运行后的动态表现",{"2":{"57":1}}],["进程并非总是单一执行",{"2":{"57":1}}],["进程",{"0":{"57":1},"2":{"41":1}}],["所谓大端存储法",{"2":{"51":1}}],["所谓的高地址",{"2":{"49":1}}],["所谓的低地址",{"2":{"49":1}}],["所谓的多任务就是可以支持多个应用程序",{"2":{"41":1}}],["所以",{"2":{"48":2,"57":1}}],["所以局部变量",{"2":{"42":1}}],["所以全局变量",{"2":{"42":1}}],["所有的程序代码全部由该线程负责执行",{"2":{"58":1}}],["所有数据和指令都以二进制形式表示",{"2":{"30":1}}],["所有客户端立即生效",{"2":{"20":1}}],["073",{"2":{"48":2}}],["0x0000ffffffffffff",{"2":{"48":1}}],["0x000000000000~",{"2":{"48":1}}],["0x000000000~",{"2":{"48":1}}],["0xfffffffff",{"2":{"48":1}}],["0x55fda7351014",{"2":{"41":1}}],["0x55fda7351010",{"2":{"41":1}}],["0000",{"2":{"48":22}}],["0",{"2":{"41":1,"47":1,"49":1,"50":1,"54":1}}],["缓冲区",{"2":{"41":1,"47":1,"50":1}}],["缓存等",{"2":{"32":1}}],["缓存的作用是减少cpu访问内存的时间",{"2":{"31":1}}],["缓存是",{"2":{"31":1}}],["缓存",{"2":{"21":1,"31":1}}],["缓存策略等",{"2":{"20":1}}],["禁用",{"2":{"41":1,"47":1,"50":1}}],["=",{"2":{"41":6,"46":5,"47":2,"50":2}}],["hello",{"2":{"54":1}}],["heap",{"2":{"42":2}}],["h>",{"2":{"41":1,"47":1,"50":1,"54":1}}],["html",{"2":{"14":3}}],["https",{"2":{"3":1,"10":1}}],["http",{"2":{"3":1,"10":1,"18":1}}],["x86",{"2":{"50":1}}],["x26",{"2":{"41":2,"47":1,"50":1}}],["x3c",{"2":{"41":1,"47":1,"50":1,"54":1}}],["xxx",{"2":{"28":1}}],["例如",{"2":{"39":1,"42":1}}],["硬盘存储",{"2":{"39":1}}],["硬盘",{"2":{"39":1}}],["硬件驱动",{"2":{"23":1}}],["硬件等进行优化加速",{"2":{"10":1}}],["写回",{"2":{"38":1}}],["跳转到其他指令等",{"2":{"38":1}}],["逻辑运算",{"2":{"38":1}}],["devops",{"0":{"63":1}}],["decode",{"2":{"38":1}}],["dll",{"2":{"42":1}}],["data",{"2":{"19":1,"42":1}}],["会生成多个进程来分工",{"2":{"57":1}}],["会将内存条按照字节划分为一个个的单元格",{"2":{"46":1}}],["会将参数",{"2":{"42":1}}],["会将程序加载到内存中",{"2":{"37":1}}],["会随着审美的变化经常变动",{"2":{"14":1}}],["像我们平常使用记事本软件一样",{"2":{"45":1}}],["像",{"2":{"36":1}}],["代码段中保存的是指令",{"2":{"42":1}}],["代码编写完成后",{"2":{"36":1}}],["代码整洁之道",{"2":{"28":1}}],["执行效率高",{"2":{"58":1}}],["执行过程中不会互相干扰",{"2":{"57":1}}],["执行完的结果可能被写回到寄存器或内存中",{"2":{"38":1}}],["执行指令",{"0":{"38":1},"2":{"38":2}}],["执行指令和与硬件交互",{"2":{"34":1}}],["执行等",{"2":{"32":1}}],["实际操作系统会有所限制",{"2":{"48":1}}],["实地址",{"2":{"41":1}}],["实现多线程和并行计算",{"2":{"32":1,"53":1}}],["实践建议",{"0":{"28":1}}],["超标量单元和多核结构",{"2":{"32":1}}],["取指令",{"2":{"32":1,"38":1}}],["循环跳转等",{"2":{"32":1}}],["execute",{"2":{"38":1}}],["else",{"2":{"32":1}}],["edge",{"2":{"3":1}}],["图形化",{"2":{"41":1}}],["图形处理等需要大量小数计算的应用中",{"2":{"32":1}}],["图片",{"2":{"10":1}}],["浮点运算通常比整数运算复杂且计算量大",{"2":{"32":1}}],["浮点运算单元",{"2":{"32":1}}],["fetch",{"2":{"38":1}}],["fpu",{"2":{"32":2}}],["floating",{"2":{"32":1}}],["总结",{"0":{"60":1}}],["总感觉",{"2":{"56":1}}],["总线接口单元",{"2":{"32":2}}],["总是需要加载一些静态资源的",{"2":{"10":1}}],["还负责在恰当的时机",{"2":{"57":1}}],["还涉及到不同硬件的协作",{"2":{"39":1}}],["还有浮点运算单元",{"2":{"32":1}}],["还需要学会多线程编程",{"2":{"60":1}}],["还需要了解不少硬件",{"2":{"25":1}}],["还需要进行算法体系和代码能力的积累",{"2":{"24":1}}],["除了控制单元",{"2":{"32":1}}],["除等算术操作",{"2":{"31":1}}],["最为重要的两个步骤就是",{"2":{"45":1}}],["最为常见的内存就是随机存取存储器",{"2":{"45":1}}],["最终需要通过输出设备来将结果展示给用户",{"2":{"31":1}}],["最常碰到的问题",{"2":{"27":1}}],["显示输出",{"2":{"39":1}}],["显示器",{"2":{"31":1}}],["显示的页面和可交互的界面",{"2":{"14":1}}],["输入输出设备等",{"2":{"39":1}}],["输入设备通过",{"2":{"31":1}}],["输入设备提供外界与计算机交互的方式",{"2":{"31":1}}],["输入设备和输出设备负责与外界的交互",{"2":{"30":1}}],["输入设备和输出设备组成",{"2":{"30":1}}],["输出设备也通过",{"2":{"31":1}}],["输出设备是冯",{"2":{"31":1}}],["int",{"2":{"41":3,"46":1,"47":4,"50":2,"54":1}}],["interpret",{"2":{"36":1}}],["interface",{"2":{"32":1}}],["include",{"2":{"41":1,"47":1,"50":1,"54":1}}],["instruction",{"2":{"32":1}}],["if",{"2":{"32":1}}],["i",{"2":{"31":2,"39":1,"57":3,"60":1}}],["iot",{"2":{"25":1}}],["ios",{"2":{"15":1}}],["鼠标等",{"2":{"31":1}}],["键盘",{"2":{"31":1}}],["直接将数据按照高有效位到低有效位",{"2":{"51":1}}],["直接从这里获取需要的指令和数据",{"2":{"31":1}}],["直接呈现给用户的部分",{"2":{"14":1}}],["诺依曼结构中实现计算结果输出的部分",{"2":{"31":1}}],["诺依曼结构中的位置十分重要",{"2":{"31":1}}],["诺依曼体系结构中的程序",{"2":{"42":1}}],["诺依曼体系结构中的五大部件",{"2":{"30":1}}],["诺依曼体系结构中主要用于存放程序指令和数据",{"2":{"31":1}}],["诺依曼体系结构中主要用于执行各种算术运算和逻辑运算",{"2":{"31":1}}],["诺依曼体系结构中主要负责指令的解释和控制",{"2":{"31":1}}],["诺依曼体系结构的关系",{"0":{"31":1}}],["诺依曼体系结构的理论要点如下",{"2":{"30":1}}],["诺依曼体系结构",{"0":{"30":1}}],["三级缓存",{"2":{"31":1}}],["三层架构",{"2":{"19":1}}],["loader",{"2":{"37":1,"42":1}}],["logic",{"2":{"31":1}}],["linux",{"2":{"37":1,"42":3,"48":1,"49":1,"57":3}}],["l3",{"2":{"31":1}}],["l2",{"2":{"31":1}}],["l1",{"2":{"31":1}}],["中使用超标量单元和多核结构",{"2":{"53":1}}],["中",{"2":{"50":2}}],["中的高速缓存存储器",{"2":{"31":1}}],["中心化控制",{"2":{"30":1}}],["寄存器和栈等",{"2":{"58":1}}],["寄存器是",{"2":{"31":1}}],["寄存器",{"2":{"31":2,"32":1}}],["return",{"2":{"41":1,"47":1,"50":1,"54":1}}],["register",{"2":{"31":1}}],["react",{"2":{"14":1,"15":1}}],["ram",{"2":{"31":1,"45":1}}],["算术运算",{"2":{"38":1}}],["算术逻辑单元",{"2":{"31":1,"32":1}}],["算法在非算法岗位的面试中占比很低",{"2":{"28":1}}],["算法岗位的门槛比较高",{"2":{"24":1}}],["算法岗位不以编程语言为核心",{"2":{"24":1}}],["算法岗位在当今的技术领域中是非常重要且需求广泛的",{"2":{"24":1}}],["算法工程师的薪资普遍很高",{"2":{"24":1}}],["算法工程师在以下领域发挥着核心作用",{"2":{"24":1}}],["算法工程师",{"0":{"24":1},"2":{"12":1}}],["或更高的年代",{"2":{"46":1}}],["或",{"2":{"31":1,"42":2,"47":1}}],["乘",{"2":{"31":1}}],["减",{"2":{"31":1}}],["加快了搜索的效率",{"2":{"46":1}}],["加了内存地址",{"2":{"46":1}}],["加载程序",{"0":{"37":1},"2":{"34":1}}],["加",{"2":{"31":1}}],["处理插件等",{"2":{"57":1}}],["处理指令",{"2":{"39":1}}],["处理完数据后",{"2":{"31":1}}],["处理逻辑运算",{"2":{"31":1}}],["处理算术运算",{"2":{"31":1}}],["处理前端请求",{"2":{"21":1}}],["o操作",{"2":{"39":1}}],["o",{"2":{"31":2,"57":3,"60":1}}],["o设备",{"2":{"31":1}}],["opencv",{"2":{"24":1}}],["协调各部件",{"2":{"31":1}}],["协议",{"2":{"10":1}}],["发出控制信号",{"2":{"31":1}}],["解释器本身负责将代码翻译为机器能够执行的指令",{"2":{"36":1}}],["解释型语言",{"2":{"36":1}}],["解释",{"2":{"36":1}}],["解码指令",{"2":{"38":1}}],["解码",{"2":{"32":1}}],["解码和控制",{"2":{"31":1}}],["解决一个别人早就解决的问题并没有什么成就感",{"2":{"27":1}}],["它可以同时支持运行",{"2":{"57":1}}],["它被包含在进程中",{"2":{"56":1}}],["它具有高速读写特性",{"2":{"45":1}}],["它是一块巨大的内存空间",{"2":{"42":1}}],["它管理从内存加载指令和数据到cpu",{"2":{"32":1}}],["它对应于",{"2":{"31":2}}],["它们之间相对独立",{"2":{"57":1}}],["它们都属于多用户",{"2":{"57":1}}],["它们都采取将前端",{"2":{"14":1}}],["它们通过网络进行通信",{"2":{"7":1}}],["确保用户能够输入信息并接收计算机的处理结果",{"2":{"30":1}}],["确实存在一些不合理的现象",{"2":{"28":1}}],["保存数据和程序",{"2":{"30":1}}],["内部",{"2":{"31":1}}],["内部的高速存储单元",{"2":{"31":1}}],["内部的",{"2":{"31":1,"41":1}}],["内部的算术逻辑单元",{"2":{"31":1}}],["内部的控制单元",{"2":{"31":1}}],["内存等资源",{"2":{"57":1}}],["内存以及",{"2":{"57":1}}],["内存地址是计算机中用于标识内存中某个特定位置的数值",{"2":{"46":1}}],["内存地址就是虚拟内存空间中某个内存单元",{"2":{"46":1}}],["内存地址就已经确定了",{"2":{"41":1}}],["内存地址",{"0":{"46":1},"2":{"46":1}}],["内存就是软件在运行过程中",{"2":{"45":1}}],["内存是易失性存储器",{"2":{"45":1}}],["内存是一种计算机硬件",{"2":{"45":1}}],["内存条的外观",{"2":{"45":1}}],["内存条",{"2":{"45":1}}],["内存和内存地址",{"0":{"44":1},"1":{"45":1,"46":1,"47":1}}],["内存分区",{"2":{"42":1}}],["内存管理单元",{"2":{"41":1}}],["内存管理",{"2":{"39":1}}],["内存空间",{"2":{"37":1}}],["内存",{"0":{"45":1},"2":{"30":1,"39":1,"57":3,"60":1}}],["内容去进行提高和沉淀",{"2":{"21":1}}],["组成中央处理器",{"2":{"30":1}}],["运维技术栈",{"0":{"64":1}}],["运维工程师",{"2":{"12":1}}],["运算符来获取变量的内存地址",{"2":{"41":1}}],["运算器",{"2":{"31":1}}],["运算器在冯",{"2":{"31":1}}],["运算器和控制器通常被集成在一起",{"2":{"30":1}}],["构成了一个完整的计算机系统",{"2":{"30":1}}],["控制单元将指令译码成具体的操作",{"2":{"38":1}}],["控制单元",{"2":{"31":1}}],["控制数据流",{"2":{"30":1}}],["控制器和总线接口单元负责协调",{"2":{"31":1}}],["控制器发出的信号可以协调",{"2":{"31":1}}],["控制器在冯",{"2":{"31":1}}],["控制器",{"2":{"30":1,"31":1}}],["负责当前进程中程序的执⾏",{"2":{"56":1}}],["负责分配和释放",{"2":{"42":1}}],["负责将程序的机器代码加载到内存中",{"2":{"37":1}}],["负责与系统总线",{"2":{"32":1}}],["负责数据处理和指令执行",{"2":{"30":1}}],["负责解释和执行指令",{"2":{"30":1}}],["负载均衡",{"2":{"20":1}}],["地址和数据寄存器等",{"2":{"56":1}}],["地址码指示操作数的位置",{"2":{"30":1}}],["地理等都是知识",{"2":{"27":1}}],["五大部件",{"2":{"30":1}}],["二进制逻辑",{"2":{"30":1}}],["二是毕业后不再学习",{"2":{"27":1}}],["冯",{"2":{"30":2,"42":1}}],["程序计数器",{"2":{"58":1}}],["程序是存储在磁盘上的静态代码和数据",{"2":{"57":1}}],["程序是怎样跑起来的",{"2":{"28":1}}],["程序和进程的区别",{"2":{"57":1}}],["程序代码",{"2":{"57":1,"58":1}}],["程序代码区",{"2":{"42":3}}],["程序执行结束后",{"2":{"57":1}}],["程序员唯一能控制的内存区域就是堆",{"2":{"42":1}}],["程序员用高级编程语言",{"2":{"35":1}}],["程序运行结束时由操作系统回收",{"2":{"42":1}}],["程序启动时",{"2":{"42":1}}],["程序在链接的时候",{"2":{"41":1}}],["程序在计算机中运行的主要流程",{"2":{"34":1}}],["程序在计算机中运行的过程涉及多个复杂的步骤",{"2":{"34":1}}],["程序需要与外部设备交互",{"2":{"39":1}}],["程序可以申请一块内存",{"2":{"42":1}}],["程序可以访问并控制这些硬件",{"2":{"39":1}}],["程序可能需要从硬盘读取或写入数据",{"2":{"39":1}}],["程序加载到内存后",{"2":{"38":1}}],["程序指令和数据都存储在计算机的内存中",{"2":{"30":1}}],["程序到底是怎么在计算机中运行的",{"0":{"29":1,"33":1},"1":{"30":1,"31":1,"32":1,"33":1,"34":2,"35":2,"36":2,"37":2,"38":2,"39":2}}],["合理的使用",{"2":{"28":1}}],["谭浩强同学的",{"2":{"28":1}}],["从理论上",{"2":{"48":1}}],["从内存中的对应位置将数据取出来",{"2":{"45":1}}],["从代码到实际的机器执行分为几个主要阶段",{"2":{"34":1}}],["从而提升",{"2":{"32":1}}],["从而大大提高了开发效率和系统的可维护性",{"2":{"21":1}}],["从输入设备接收数据",{"2":{"31":1}}],["从入门到精通",{"2":{"28":1}}],["天",{"2":{"28":1}}],["品味很重要",{"2":{"28":1}}],["难道闯红灯存在就是合理的",{"2":{"28":1}}],["难以做个性化优化",{"2":{"10":1}}],["闯红灯",{"2":{"28":1}}],["现代操作系统是多用户",{"2":{"41":1}}],["现代",{"0":{"32":1},"2":{"32":2,"53":1}}],["现代微型个人计算机中主板的结构",{"2":{"31":1}}],["现代计算机和冯",{"0":{"31":1}}],["现代的",{"2":{"15":1}}],["现实生活中的进程和线程的关系",{"0":{"59":1}}],["现实生活中",{"2":{"28":1}}],["原本应该是",{"2":{"28":1}}],["存放程序中定义的常量值",{"2":{"42":1}}],["存放的是最近使用的数据或指令",{"2":{"31":1}}],["存取内存",{"2":{"38":1}}],["存储在低地址到高地址当中",{"2":{"51":1}}],["存储式程序中的程序分为指令和数据",{"2":{"42":1}}],["存储未初始化的全局变量和静态变量",{"2":{"42":1}}],["存储已初始化的全局变量和静态变量",{"2":{"42":1}}],["存储器在冯",{"2":{"31":2}}],["存储器",{"2":{"30":2}}],["存储程序中定义的全局变量和静态变量",{"2":{"42":1}}],["存储程序的执行代码",{"2":{"42":1}}],["存储程序",{"2":{"30":1}}],["存储到数据库",{"2":{"18":1}}],["存在是有原因的",{"2":{"28":1}}],["存在即合理",{"2":{"28":1}}],["导致很多时候",{"2":{"28":1}}],["翻译的不够好",{"2":{"28":1}}],["英文翻译不合适",{"2":{"28":1}}],["英文词汇",{"2":{"28":1}}],["英语能力是非常重要的",{"2":{"28":1}}],["根本原因",{"2":{"28":1}}],["根据特定条件决定流程的下一步操作",{"2":{"18":1}}],["互联网应用乃至于整个计算机科学是建立在英语基础上的",{"2":{"28":1}}],["尽量看一些经典的书籍",{"2":{"28":1}}],["尽量看英文或中文翻译书籍",{"2":{"28":1}}],["尽快解决碰到的问题才是上上之选",{"2":{"27":1}}],["慎用",{"2":{"28":1}}],["慎用简体中文互联网学习知识",{"2":{"28":1}}],["边界更重要",{"2":{"27":1}}],["朋友真的很重要",{"2":{"27":1}}],["要想搞清楚线程是什么",{"2":{"56":1}}],["要想从事这些开发岗位",{"2":{"23":1}}],["要去知识的源头学习",{"2":{"28":1}}],["要学会利用别人的经验变成自己的经验",{"2":{"27":1}}],["要学会构建自己的圈层",{"2":{"27":1}}],["⑩",{"2":{"27":1}}],["摸鱼是浪费时间的利器",{"2":{"27":1}}],["专业的说法是落盘",{"2":{"45":2}}],["专门用于处理浮点数运算",{"2":{"32":1}}],["专注是学习最好的手段",{"2":{"27":1}}],["专属客户端意味着专属操作",{"2":{"9":1}}],["专属的客户端意味着跨平台性比较差",{"2":{"9":1}}],["专属的客户端",{"2":{"8":1}}],["想休息就好好休息一下",{"2":{"27":1}}],["想不明白",{"2":{"27":1}}],["主存储器",{"2":{"31":1}}],["主要用于临时存储数据和指令",{"2":{"31":1}}],["主要依赖后端处理和响应",{"2":{"19":1}}],["主动学习和专注学习",{"2":{"27":1}}],["⑨",{"2":{"27":1}}],["很多应用程序",{"2":{"60":1}}],["很多教科书都是这么说的",{"2":{"56":1}}],["很多软件都很智能",{"2":{"45":2}}],["很多知识",{"2":{"27":1}}],["很重要",{"2":{"14":1}}],["肯定会有拨云见日的一天",{"2":{"27":1}}],["坚持学",{"2":{"27":1}}],["慢慢学",{"2":{"27":1}}],["老的知识还没有完全弄明白",{"2":{"27":1}}],["新知识纷沓而来",{"2":{"27":1}}],["新能源汽车目前发展非常迅猛",{"2":{"25":1}}],["初学者在学习语言",{"2":{"27":1}}],["忘了再学是很正常的",{"2":{"27":1}}],["学科",{"0":{"68":1}}],["学了忘",{"2":{"27":1}}],["学习不要急于一时",{"2":{"27":1}}],["学习不要过分扣细节",{"2":{"27":1}}],["学习语言是一个长久的过程",{"2":{"27":1}}],["学习技能的目的不是做题",{"2":{"27":1}}],["学习的本质是复读机",{"2":{"27":1}}],["学习是有界限的",{"2":{"27":1}}],["学习",{"2":{"27":3}}],["学习建议",{"0":{"26":1},"1":{"27":1,"28":1}}],["学习难度很大",{"2":{"23":1}}],["⑧",{"2":{"27":1}}],["技术的学习应该追求广度",{"2":{"27":1}}],["技能强调的是理论+实践",{"2":{"27":1}}],["技能",{"2":{"27":1}}],["只会简单的单线程编程已经远远不足以满足实际项目需求",{"2":{"60":1}}],["只能处理一个任务",{"2":{"54":1}}],["只能等到程序运行结束后由操作系统收回",{"2":{"42":1}}],["只有一个核心",{"2":{"54":1}}],["只关心我们能否利用手上的一切资源去完成对应的需求和功能",{"2":{"27":1}}],["只是过程和手段",{"2":{"27":2}}],["没有人关心我们是如何实现",{"2":{"27":1}}],["⑦",{"2":{"27":1}}],["⑥",{"2":{"27":1,"30":1}}],["追求能力的成长",{"2":{"27":1}}],["培养自己检索信息的能力",{"2":{"27":1}}],["站在巨人的肩膀上",{"2":{"27":1}}],["牛顿都要",{"2":{"27":1}}],["任何人终究是时间有限的",{"2":{"27":1}}],["因为这样更容易调试",{"2":{"50":1}}],["因为这有利于我们更好的使用工具",{"2":{"27":1}}],["因为它一次性处理的数据量是",{"2":{"48":2}}],["因为它们的内存不在了",{"2":{"42":1}}],["因为它们的内存一直都在",{"2":{"42":1}}],["因为程序指令和数据都存储在这里",{"2":{"31":1}}],["因为缓存比内存的访问速度要快得多",{"2":{"31":1}}],["因此",{"2":{"32":1}}],["因此前后端界限较清晰",{"2":{"19":1}}],["因此常采用",{"2":{"19":1}}],["过度探讨问题浪费时间",{"2":{"27":1}}],["当程序执行结束后",{"2":{"60":1}}],["当程序执行时",{"2":{"60":1}}],["当程序执行完毕后",{"2":{"57":1}}],["当进程中包含多个线程时",{"2":{"58":1}}],["当一个进程只有一个线程的时候",{"2":{"58":1}}],["当一个程序被执行时",{"2":{"57":1}}],["当一个程序执行的时候",{"2":{"57":1}}],["当前指令位置",{"2":{"56":1}}],["当我们输入一些文字的时候",{"2":{"45":1}}],["当我们遇到困境的时候",{"2":{"27":1}}],["当今的科学体系",{"2":{"28":1}}],["当然",{"2":{"58":1}}],["当然是多任务的操作系统",{"2":{"57":1}}],["当然嵌入式开发往往涉及硬件交互",{"2":{"25":1}}],["当然后端的技术栈也会更复杂",{"2":{"21":1}}],["却花费大量时间在练语法",{"2":{"27":1}}],["却走错了路",{"2":{"27":1}}],["投入了大量努力",{"2":{"27":1}}],["驾驶",{"2":{"27":1}}],["烹饪",{"2":{"27":1}}],["历史",{"2":{"27":1}}],["数学就是一种知识",{"2":{"27":1}}],["数学",{"2":{"27":1}}],["数据",{"2":{"57":3,"58":1}}],["数据的最低有效字节存储在内存的低地址处",{"2":{"50":1}}],["数据段中保存的是数据",{"2":{"42":1}}],["数据移动等",{"2":{"38":1}}],["数据总线和地址总线进行交互",{"2":{"32":1}}],["数据是一样的",{"2":{"21":1}}],["数据备份与恢复等一系列的工作",{"2":{"21":1}}],["数据加工计算",{"2":{"21":1}}],["数据处理",{"2":{"18":1}}],["数据验证和流程控制等",{"2":{"18":1}}],["数据库",{"2":{"12":1,"23":1}}],["数据传输效率更高",{"2":{"10":1}}],["教学等获取知识",{"2":{"27":1}}],["我们经常接触到的操作系统可能就是",{"2":{"57":1}}],["我们还需要学习多线程编程技术",{"2":{"54":1}}],["我们编写的程序",{"2":{"54":1}}],["我们生活中常见的电子设备几乎都是多核的",{"2":{"54":1}}],["我们通常都是使用十六进制来表示的",{"2":{"48":1}}],["我们就可以直接定位到指定的数据",{"2":{"46":1}}],["我们只能一个个的去寻找想要的数据",{"2":{"46":1}}],["我们可以很快的定位到所要了解汉字所在的页数",{"2":{"46":1}}],["我们可以通过书籍",{"2":{"27":1}}],["我们需要一页一页",{"2":{"46":1}}],["我们需要实践和反复练习才能掌握技能",{"2":{"27":1}}],["我们又该如何取出呢",{"2":{"46":1}}],["我们也知道",{"2":{"41":1}}],["我们更是如此",{"2":{"27":1}}],["我们的目的是什么",{"2":{"27":1}}],["我们完全可以换一门编程语言来学习",{"2":{"27":1}}],["我们最终的目的是理解计算机的本质",{"2":{"27":1}}],["我们在学习数学的时候",{"2":{"27":1}}],["我们在学习英文的时候",{"2":{"27":1}}],["我们知道它的原理当然会更好",{"2":{"27":1}}],["我们知道",{"2":{"12":1,"50":1,"58":1}}],["事实和理论",{"2":{"27":1}}],["观察或研究获得的信息",{"2":{"27":1}}],["经验",{"2":{"27":1}}],["知识是一种认知上的积累",{"2":{"27":1}}],["知识是指通过学习",{"2":{"27":1}}],["知识和技能不一样",{"2":{"27":1}}],["把计算机的使用搞熟练是一个经常被忽略但非常重要的东西",{"2":{"27":1}}],["适用于复杂的应用场景",{"2":{"58":1}}],["适用于简单的应用场景",{"2":{"58":1}}],["适用于需要快速访问的操作",{"2":{"45":1}}],["适当深度的学习有益身心健康",{"2":{"27":1}}],["适度追剧和玩游戏有益健康",{"2":{"27":1}}],["适合复杂的大型系统",{"2":{"19":1}}],["适合用于快速开发简单的应用",{"2":{"14":1}}],["外设协议等知识",{"2":{"25":1}}],["机器码是计算机能够直接执行的二进制代码",{"2":{"36":1}}],["机器学习",{"2":{"24":1}}],["机械自动化等等",{"2":{"25":1}}],["工业自动化",{"2":{"25":1}}],["工作流和决策逻辑",{"2":{"18":1}}],["辅助驾驶",{"2":{"25":1}}],["汽车上的各种电子系统",{"2":{"25":1}}],["汽车领域",{"2":{"25":1}}],["车机系统",{"2":{"25":1}}],["交管系统",{"2":{"25":1}}],["智慧城市",{"2":{"25":1}}],["智能穿戴设备",{"2":{"25":1}}],["农业",{"2":{"25":1}}],["自动化养殖业",{"2":{"25":1}}],["手环",{"2":{"25":1}}],["手机登录",{"2":{"21":1}}],["手机",{"2":{"7":1,"54":1}}],["远程医疗器械",{"2":{"25":1}}],["华为等",{"2":{"25":1}}],["典型的智能家居",{"2":{"25":1}}],["典型的编程语言有",{"2":{"14":1}}],["嵌入式开发的主导语言就是",{"2":{"25":1}}],["嵌入式领域的就业前景目前非常广阔",{"2":{"25":1}}],["嵌入式领域是一个专注于开发专用电子系统",{"2":{"25":1}}],["嵌入式系统",{"2":{"25":1}}],["嵌入式工程师",{"0":{"25":1},"2":{"12":1}}],["编译",{"2":{"36":1}}],["编译或解释",{"0":{"36":1}}],["编译或解释代码",{"2":{"34":1}}],["编译器",{"2":{"23":1}}],["编写程序代码",{"2":{"35":1}}],["编写代码",{"0":{"35":1},"2":{"34":1}}],["编写的开源视觉库",{"2":{"24":1}}],["编程领域",{"2":{"28":1}}],["编程的思维等",{"2":{"27":1}}],["编程",{"2":{"27":1}}],["编程是基于计算机的一门技术",{"2":{"27":1}}],["就必须搞清楚进程是什么",{"2":{"56":1}}],["就目前而言",{"2":{"54":1}}],["就能加快数据的存取速度",{"2":{"46":1}}],["就算数据",{"2":{"46":1}}],["就可以在函数外部使用",{"2":{"42":1}}],["就是位于内存取值范围的较高端",{"2":{"49":1}}],["就是位于内存取值范围的较低端",{"2":{"49":1}}],["就是翻译错误",{"2":{"28":1}}],["就是用",{"2":{"24":1}}],["就已经将需要的静态资源存在本地了",{"2":{"10":1}}],["著名的",{"2":{"24":1}}],["建议具有良好的相关学历背景的同学从事算法岗位",{"2":{"24":1}}],["需要注意的是",{"2":{"50":1}}],["需要通过加载器",{"2":{"42":1}}],["需要通过",{"2":{"41":1}}],["需要经过编译或解释的步骤",{"2":{"36":1}}],["需要扎实的数学功底",{"2":{"24":1}}],["需要熟知操作系统原理",{"2":{"23":1}}],["几乎必须掌握",{"2":{"24":1}}],["几乎各行各业都需要专业的算法工程师来专注于开发和实现高效的算法来解决复杂的问题",{"2":{"24":1}}],["太卷",{"2":{"24":1}}],["由于算法岗位的专业性和重要性",{"2":{"24":1}}],["由于前端较轻",{"2":{"19":1}}],["云计算",{"2":{"24":1}}],["人们就提出了进程的概念",{"2":{"57":1}}],["人生的两大悲哀",{"2":{"27":1}}],["人生最大的悲哀就在于",{"2":{"27":1}}],["人脸识别",{"2":{"24":2}}],["人工智能",{"2":{"24":1}}],["人工智能的首选语言",{"2":{"22":1}}],["门槛是非常高的",{"2":{"23":1}}],["门槛较低",{"2":{"14":1}}],["接收键盘输入等",{"2":{"39":1}}],["接口连接到计算机系统",{"2":{"31":2}}],["接口调用和集成",{"2":{"18":1}}],["接近硬件层面的应用开发",{"2":{"23":1}}],["底层应用",{"2":{"23":1}}],["底层开发相当于树的树根部分",{"2":{"12":1}}],["底层开发",{"0":{"23":1},"2":{"12":1}}],["作为后起之秀是",{"2":{"22":1}}],["语言程序设计",{"2":{"28":1}}],["语言就是一种技能",{"2":{"27":1}}],["语言等却是技能",{"2":{"27":1}}],["语言",{"2":{"22":1,"25":1,"41":1}}],["⑤",{"2":{"22":1,"27":1,"28":1,"30":1,"32":1}}],["前后端同时使用",{"2":{"22":1}}],["前端技术栈",{"0":{"62":1}}],["前端由于硬件限制",{"2":{"21":1}}],["前端主要关注于客户端应用本身",{"2":{"15":1}}],["前端主要关注于浏览器端",{"2":{"14":1}}],["前端开发入门简单",{"2":{"14":1}}],["前端发展的历史",{"2":{"14":1}}],["前端涉及到的技术有",{"2":{"14":1}}],["前端应用有",{"2":{"14":1}}],["前端",{"2":{"14":1}}],["前端工程师相当于树的叶子部分",{"2":{"12":1}}],["前端工程师",{"0":{"13":1},"1":{"14":1,"15":1},"2":{"12":1}}],["nbsp",{"2":{"61":31,"62":17,"63":12,"64":7,"65":2,"66":6,"67":4}}],["num",{"2":{"47":5,"50":4}}],["nullptr",{"2":{"41":1,"47":1,"50":1}}],["new",{"2":{"42":1}}],["n",{"2":{"41":2,"47":1,"50":1}}],["node",{"2":{"22":1}}],["native",{"2":{"15":1}}],["目前比较热门的嵌入式领域有",{"2":{"25":1}}],["目前",{"2":{"22":1,"45":2,"60":1}}],["与硬件交互",{"0":{"39":1}}],["与输出设备的交互",{"2":{"31":1}}],["与",{"2":{"22":1,"31":1}}],["与外部系统或服务进行交互",{"2":{"18":1}}],["以便后期其它的程序使用",{"2":{"57":1}}],["以",{"2":{"47":1}}],["以防止数据丢失",{"2":{"45":2}}],["以警告用户还没有保存数据",{"2":{"45":1}}],["以及用于运行程序的资源",{"2":{"57":1}}],["以及将计算结果写回到内存",{"2":{"32":1}}],["以及一些其它软硬件知识",{"2":{"23":1}}],["以其简洁的语法和数据处理及分析上的能力而受欢迎",{"2":{"22":1}}],["以获取或提交数据",{"2":{"18":1}}],["延迟性要求低的场合中",{"2":{"22":1}}],["稳定性要求高",{"2":{"22":1}}],["业务变动快",{"2":{"22":1}}],["业务逻辑清晰",{"2":{"20":1}}],["业务逻辑和软件架构相辅相成",{"2":{"20":1}}],["业务逻辑和",{"2":{"19":1}}],["业务逻辑层和数据层",{"2":{"19":1}}],["业务逻辑可以部分在客户端实现",{"2":{"18":1}}],["业务逻辑通常完全放在服务器端",{"2":{"18":1}}],["业务逻辑的主要内容有",{"2":{"18":1}}],["业务逻辑是指系统为了满足特定业务需求所需的操作",{"2":{"18":1}}],["业务逻辑",{"0":{"18":1}}],["高位字节存储在高地址处",{"2":{"50":1}}],["高地址和低地址",{"0":{"49":1}}],["高并发场景多",{"2":{"22":1}}],["高度可定制化的",{"2":{"8":1}}],["尤其是在科学计算",{"2":{"32":1}}],["尤其是在智能家居和新能源汽车领域",{"2":{"25":1}}],["尤其是在涉及电商的领域中",{"2":{"22":1}}],["尤其是移动互联网的崛起",{"2":{"14":1}}],["是线程",{"2":{"60":1}}],["是一组指令的集合",{"2":{"57":1}}],["是进程的实际运作单位",{"2":{"56":1}}],["是按照顺序从低到高进行存储",{"2":{"50":1}}],["是软件在运行过程中",{"2":{"45":1}}],["是计算机执行计算任务的核心",{"2":{"31":1}}],["是计算机运作的基础",{"2":{"30":1}}],["是",{"2":{"31":1}}],["是西方的现代科学体系",{"2":{"28":1}}],["是工具而非决策者",{"2":{"28":1}}],["是王者",{"2":{"23":1}}],["是绝对的王者",{"2":{"22":1}}],["是最常用的后端开发语言",{"2":{"22":1}}],["是用来做网页的交互处理",{"2":{"14":1}}],["是用来做网页的视觉体验",{"2":{"14":1}}],["是用来做网页的内容结构",{"2":{"14":1}}],["成熟稳定",{"2":{"22":1}}],["616",{"2":{"48":2}}],["64gb",{"2":{"46":1}}],["64",{"2":{"42":1,"47":1,"48":9,"50":1}}],["6",{"0":{"22":1,"25":1,"39":1},"2":{"48":1}}],["多个子进程负责不同的功能",{"2":{"57":1}}],["多核的优势",{"2":{"54":1}}],["多核的威力",{"2":{"54":1}}],["多核",{"0":{"54":1}}],["多线程程序可以同时执行多个任务",{"2":{"58":1}}],["多线程",{"0":{"52":1},"1":{"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1}}],["多任务",{"2":{"41":1,"57":1}}],["多种解决方案等等",{"2":{"21":1}}],["多端互通的游戏",{"2":{"21":1}}],["各个线程也有自己私有的资源",{"2":{"58":1}}],["各色中间件",{"2":{"21":1}}],["各种应用的编程语言",{"2":{"15":1}}],["分配运行所需的资源",{"2":{"57":1}}],["分配和回收",{"2":{"57":2}}],["分配的内存块",{"2":{"42":1}}],["分支预测单元用于预测程序中的分支",{"2":{"32":1}}],["分支预测单元",{"2":{"32":2}}],["分为",{"2":{"31":1}}],["分为两大类",{"2":{"15":1}}],["分布式",{"2":{"21":1}}],["涉及复杂的后端架构",{"2":{"21":1}}],["往往是比前端大的",{"2":{"21":1}}],["虽然进程通常代表了一个正在执行的程序",{"2":{"57":1}}],["虽然虚拟内存地址还是由低向高",{"2":{"50":1}}],["虽然",{"2":{"48":1}}],["虽然输入设备不直接存在于",{"2":{"31":1}}],["虽然各平台的前端展示可能不同",{"2":{"21":1}}],["虽然界面",{"2":{"21":1}}],["操作可能包括计算",{"2":{"38":1}}],["操作码指示要执行的操作",{"2":{"30":1}}],["操作逻辑等前端部分大不相同",{"2":{"21":1}}],["操作系统会创建一个进程",{"2":{"60":1}}],["操作系统会创建进程并给它分配资源",{"2":{"57":1}}],["操作系统以进程为单位管理",{"2":{"57":1}}],["操作系统就会销毁进程并回收资源",{"2":{"57":1}}],["操作系统就实现了对计算机资源的高效管理",{"2":{"57":1}}],["操作系统负责分配所需要的全部资源",{"2":{"57":1}}],["操作系统负责给它们分配所需要的全部资源",{"2":{"57":1}}],["操作系统为了更快的去管理内存中的数据",{"2":{"46":1}}],["操作系统将虚拟地址空间分为了不同的内存区域",{"2":{"42":1}}],["操作系统分配内存给程序",{"2":{"39":1}}],["操作系统中的加载器",{"2":{"37":1}}],["操作系统",{"2":{"12":1,"23":1,"37":1}}],["功能",{"2":{"21":1}}],["功能可以十分强大",{"2":{"8":1}}],["微软的亲儿子",{"2":{"22":1}}],["微信",{"2":{"21":1,"57":1}}],["微信和电脑登录",{"2":{"21":1}}],["微服务架构也越来越普遍",{"2":{"19":1}}],["微服务架构",{"2":{"19":1,"21":1}}],["诸如",{"2":{"21":2}}],["都是多线程程序",{"2":{"60":1}}],["都是单线程的程序",{"2":{"54":1}}],["都是由低向高",{"2":{"50":1}}],["都是学习工具",{"2":{"27":1}}],["都有自己唯一的编号",{"2":{"46":1}}],["都可以共用同一套后端逻辑",{"2":{"21":1}}],["都属于软件架构中比较基础和普遍的模式",{"2":{"1":1}}],["无法改变",{"2":{"41":1}}],["无论是网页还是桌面应用",{"2":{"21":1}}],["无论是手机还是电脑",{"2":{"21":1}}],["无需额外的学习成本",{"2":{"4":1}}],["无需安装额外软件",{"2":{"3":1}}],["并自由地使用",{"2":{"42":1}}],["并且在程序运行期间一直存在",{"2":{"42":1}}],["并且变化不是很大",{"2":{"21":1}}],["并不完全属于图形化的操作系统",{"2":{"57":1}}],["并不会在程序执行期间改变",{"2":{"42":1}}],["并不是真实的物理地址",{"2":{"41":1}}],["并为程序分配资源",{"2":{"37":1}}],["并管理程序流程",{"2":{"31":1}}],["并通过",{"2":{"3":1}}],["监控日志",{"2":{"21":1}}],["安装多个核心",{"2":{"54":1}}],["安全控制",{"2":{"21":1}}],["安卓端",{"2":{"15":1}}],["身份验证和授权",{"2":{"21":1}}],["短信服务等",{"2":{"21":1}}],["消息队列",{"2":{"21":1}}],["也就是说",{"2":{"58":1}}],["也就是很多教材中讲的",{"2":{"57":1}}],["也可以证明",{"2":{"50":1}}],["也可以称为数据段",{"2":{"42":1}}],["也可以称为代码段",{"2":{"42":1}}],["也可以称为",{"2":{"14":1,"15":1}}],["也有很多软件提供了自动保存数据的功能",{"2":{"45":2}}],["也被称为存储式程序",{"2":{"42":1}}],["也包括",{"2":{"31":1}}],["也支持跨平台",{"2":{"22":1}}],["也是后端程序员最主要的任务之一",{"2":{"21":1}}],["551",{"2":{"48":2}}],["5s",{"2":{"45":2}}],["5",{"0":{"21":1,"24":1,"38":1,"51":1,"60":1}}],["扩展性",{"2":{"20":1}}],["能提升系统在高并发场景下的响应速度",{"2":{"20":1}}],["综合应用",{"0":{"20":1}}],["面向服务的架构",{"2":{"19":1}}],["呈现在客户端",{"2":{"19":1}}],["unit",{"2":{"31":2,"32":3,"41":1}}],["uniapp",{"2":{"15":1}}],["ui",{"2":{"19":1}}],["厚",{"2":{"19":1}}],["提高执行效率",{"2":{"32":1}}],["提高灵活性和扩展性",{"2":{"19":1}}],["提供api",{"2":{"21":1}}],["提醒用户需要尽快保存数据",{"2":{"45":1}}],["提醒",{"2":{"3":1,"7":1,"12":1,"14":2,"15":1,"18":2,"19":2,"20":2,"21":2,"23":1,"24":1,"25":1,"27":10,"28":5,"30":1,"31":5,"32":1,"41":1,"42":2,"45":2,"46":1,"47":1,"48":2,"51":1,"56":1,"57":4,"58":1,"60":2}}],["便于管理和扩展",{"2":{"19":1}}],["p",{"2":{"41":2,"47":1,"50":1}}],["process",{"0":{"57":1}}],["printf",{"2":{"41":2,"47":1,"50":1,"54":1}}],["predictor",{"2":{"32":1}}],["presentation",{"2":{"19":1}}],["pipeline",{"2":{"32":1}}],["point",{"2":{"32":1}}],["ps",{"2":{"27":1}}],["python等",{"2":{"36":1}}],["python",{"2":{"22":1,"24":1,"35":1}}],["php",{"2":{"14":1}}],["视图和控制器三部分",{"2":{"19":1}}],["视频",{"2":{"10":1}}],["将提醒你是否保存或丢失刚才输入的文字",{"2":{"45":1}}],["将记事本软件关闭",{"2":{"45":1}}],["将数据保存到内存中",{"2":{"45":1}}],["将数据从磁盘加载进内存",{"2":{"45":1}}],["将数据从内存存储到文件中",{"2":{"45":2}}],["将数据在cpu和主存储器之间传递",{"2":{"32":1}}],["将内存中的数据刷新到文件中",{"2":{"45":2}}],["将显示红色",{"2":{"45":1}}],["将程序从硬盘加载到内存中运行",{"2":{"42":1}}],["将高",{"2":{"42":1}}],["将高级语言代码转换为机器码",{"2":{"36":1}}],["将会如何执行",{"2":{"32":1}}],["将指令发送给cpu的各个单元执行",{"2":{"31":1}}],["将系统划分为多个小型服务",{"2":{"19":1}}],["将系统分为表示层",{"2":{"19":1}}],["将系统分为模型",{"2":{"19":1}}],["将客户端和服务器分离",{"2":{"1":1}}],["view",{"2":{"19":1}}],["vue",{"2":{"14":1}}],["mb",{"2":{"46":2}}],["memory",{"2":{"41":1}}],["mmu",{"2":{"41":1}}],["malloc",{"2":{"42":1}}],["management",{"2":{"41":1}}],["main",{"2":{"41":1,"47":1,"50":1,"54":1}}],["macos",{"2":{"37":1,"57":3}}],["model",{"2":{"19":1}}],["mvc",{"2":{"19":2}}],["良好的架构可以提高系统的扩展性",{"2":{"19":1}}],["描述了系统各个模块如何协同工作",{"2":{"19":1}}],["部分在服务器实现",{"2":{"18":1}}],["请求向服务器发送数据和指令",{"2":{"18":1}}],["权限验证等",{"2":{"18":1}}],["规则校验",{"2":{"18":1}}],["计算机资源",{"2":{"57":1}}],["计算机的总线层次结构是这样的",{"2":{"48":1}}],["计算机的控制单元",{"2":{"30":1}}],["计算机中存储单位的换算",{"2":{"46":1}}],["计算机程序的执行不仅仅是",{"2":{"39":1}}],["计算机由运算器",{"2":{"30":1}}],["计算机编程中的品味就是",{"2":{"28":1}}],["计算",{"2":{"18":2}}],["对应的进程会被操作系统销毁",{"2":{"60":1}}],["对应上述的步骤",{"2":{"46":2}}],["对应于计算机的主存储器",{"2":{"31":1}}],["对数据库中的数据进行增删改查操作",{"2":{"21":1}}],["对数据的增删改查",{"2":{"18":1}}],["对于系统中存在的多个进程",{"2":{"57":1}}],["对于同时执行的多个程序",{"2":{"57":1}}],["对于常见的操作系统",{"2":{"57":1}}],["对于线程",{"2":{"56":1}}],["对于多核",{"2":{"54":1}}],["对于整型变量",{"2":{"50":1}}],["对于工具",{"2":{"27":1}}],["对于",{"2":{"17":1,"48":2}}],["对于客户端开发",{"2":{"15":1}}],["对于开发者而言",{"2":{"9":1}}],["流程和规则",{"2":{"18":1}}],["其他",{"0":{"67":1}}],["其最大支持的内存大小是",{"2":{"48":1}}],["其原理就是定时",{"2":{"45":2}}],["其特点如下所示",{"2":{"45":1}}],["其实是将数据临时保存在内存中的",{"2":{"45":1}}],["其实",{"2":{"41":1,"56":1}}],["其主要功能有",{"2":{"31":3}}],["其中",{"2":{"18":1,"19":1,"31":5,"41":1,"42":1}}],["其计算能力和功能更受限",{"2":{"10":1}}],["后端技术栈",{"0":{"61":1}}],["后端领域中目前主流的语言",{"0":{"22":1}}],["后端的潜力",{"2":{"21":1}}],["后端的语言",{"2":{"21":1}}],["后端程序员也往往有更多的方向",{"2":{"21":1}}],["后端应用则一般具有很高的通用性",{"2":{"21":1}}],["后端完成所有处理并返回结果",{"2":{"18":1}}],["后端主要关于业务逻辑和软件架构",{"2":{"17":1}}],["后端工程师还负责与其他服务或组件交互",{"2":{"21":1}}],["后端工程师的其他工作",{"0":{"21":1}}],["后端工程师主要关注于业务逻辑",{"2":{"20":1}}],["后端工程师相当于树的树枝部分",{"2":{"12":1}}],["后端工程师",{"0":{"16":1},"1":{"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"2":{"12":1}}],["推荐的",{"2":{"15":1}}],["推动了应用的前后端分离",{"2":{"14":1}}],["传统的安卓开发语言",{"2":{"15":1}}],["移动客户端开发",{"2":{"15":1}}],["用来临时存储数据的",{"2":{"45":2}}],["用途",{"2":{"42":1}}],["用于存储当前运行的程序和数据",{"2":{"45":1}}],["用于存储函数调用的局部变量",{"2":{"42":1}}],["用于动态分配内存",{"2":{"42":1}}],["用于长期存储数据和程序指令",{"2":{"31":1}}],["用于分离不同的业务功能",{"2":{"19":1}}],["用于开发",{"2":{"15":1}}],["用户可以多次启动同一个应用程序",{"2":{"57":1}}],["用户通过这些设备向计算机输入数据或指令",{"2":{"31":1}}],["用户通过浏览器来访问服务器上托管的",{"2":{"3":1}}],["用户界面的限制",{"2":{"21":1}}],["用户输入的格式和范围校验",{"2":{"18":1}}],["用户只要熟练使用浏览器即可",{"2":{"4":1}}],["用户仅需要一个可用的",{"2":{"4":1}}],["跨平台框架",{"2":{"15":1}}],["桌面客户端开发",{"2":{"15":1}}],["桌面应用程序",{"2":{"7":1}}],["应用广泛",{"2":{"22":1}}],["应用的更新总是最先体现在前端应用中",{"2":{"14":1}}],["应用程序越上层",{"2":{"14":1}}],["应用程序",{"2":{"3":1}}],["另一方面",{"2":{"14":1}}],["则变动和灵活性越大",{"2":{"14":1}}],["越接近用户",{"2":{"14":1}}],["a",{"2":{"41":4}}],["amp",{"2":{"41":1}}],["alu",{"2":{"31":1,"32":1,"53":1}}],["arithmetic",{"2":{"31":1}}],["ai",{"2":{"28":3}}],["ae",{"2":{"27":1}}],["android",{"2":{"15":1}}],["angular",{"2":{"14":1}}],["api",{"2":{"10":1}}],["apple",{"2":{"15":1}}],["app",{"2":{"7":1}}],["常常占据整个虚拟空间的绝大部分",{"2":{"42":1}}],["常量区也称为只读数据段",{"2":{"42":1}}],["常量区",{"2":{"42":3}}],["常见于",{"2":{"19":1}}],["常见的架构模式",{"2":{"19":1}}],["常见的",{"2":{"14":1}}],["常用框架和库",{"2":{"14":1}}],["框架崛起",{"2":{"14":1}}],["但至少要包含一个线程",{"2":{"60":1}}],["但编写和调试过程比较复杂",{"2":{"58":1}}],["但一个程序不一定只对应一个进程",{"2":{"57":1}}],["但一般也会要求至少掌握一门编程语言",{"2":{"24":1}}],["但进程和程序之间并非总是严格的一一对应关系",{"2":{"57":1}}],["但计算机无法直接理解这些代码",{"2":{"35":1}}],["但它们在计算机系统整体架构中属于不可缺少的部件",{"2":{"31":1}}],["但可以有条件地改变执行顺序",{"2":{"30":1}}],["但学到后面可能自然而然就懂了",{"2":{"27":1}}],["但所有的游戏数据和逻辑处理都是统一的",{"2":{"21":1}}],["但仍然都是同一个账号",{"2":{"21":1}}],["但是只能顺序执行程序",{"2":{"58":1}}],["但是",{"2":{"20":1,"21":1,"27":4,"45":2,"48":1,"50":1,"54":1,"56":1}}],["但都依赖于合理的业务逻辑和软件架构来满足用户需求和系统要求",{"2":{"20":1}}],["但会增加客户端的复杂性",{"2":{"18":1}}],["但对服务器的负载压力较大",{"2":{"18":1}}],["但缺点是可维护性差",{"2":{"14":1}}],["但依然需要大量从服务器端加载资源",{"2":{"10":1}}],["这辈子真有可能翻得完",{"2":{"46":1}}],["这意味着断电后数据会丢失",{"2":{"45":1}}],["这部分内存被加载到内存中",{"2":{"42":1}}],["这些线程可以共享进程的内存空间和一些系统资源",{"2":{"58":1}}],["这些资源就会被组织成一个进程",{"2":{"57":1}}],["这些计算机资源",{"2":{"57":1}}],["这些地址可以用于访问和操作存储在内存中的数据",{"2":{"46":1}}],["这些地址都是假的",{"2":{"41":1}}],["这些信息都将被销毁",{"2":{"42":1}}],["这些变量在程序的整个生命周期内存在",{"2":{"42":1}}],["这些常量在程序运行期间不可修改",{"2":{"42":1}}],["这些内存区域存放的数据",{"2":{"42":1}}],["这些高级语言对人类更友好",{"2":{"35":1}}],["这样的程序叫做多线程程序",{"2":{"58":1}}],["这样的程序叫做单线程程序",{"2":{"58":1}}],["这样的编译型语言需要通过编译器将代码编译成可执行文件",{"2":{"36":1}}],["这样做可以减轻服务器的压力",{"2":{"18":1}}],["这样做的好处是开发效率高",{"2":{"14":1}}],["这使得程序可以在运行时修改",{"2":{"30":1}}],["这时不要着急",{"2":{"27":1}}],["这种架构的通用性使得后端可以灵活地应对不同平台和设备",{"2":{"21":1}}],["这种模式更易于集中管理和更新",{"2":{"18":1}}],["这是不可能的",{"2":{"27":1}}],["这是因为后端主要关注的是业务逻辑和数据处理",{"2":{"21":1}}],["这是后端最常处理的业务逻辑",{"2":{"21":1}}],["这是应用中处理实际业务流程的核心内容",{"2":{"18":1}}],["这就带来了性能损耗",{"2":{"10":1}}],["js",{"2":{"14":3,"22":1}}],["jsp",{"2":{"14":1}}],["javascrpit",{"2":{"14":1}}],["javascript",{"2":{"14":3,"22":1}}],["java",{"0":{"68":1},"2":{"14":1,"15":1,"22":3,"24":1,"27":3,"35":1}}],["网页应用往往前后端不分离",{"2":{"14":1}}],["网络连接等",{"2":{"58":1}}],["网络传输数据时",{"2":{"51":1}}],["网络传输的影响",{"2":{"10":1}}],["网络化的操作系统",{"2":{"41":1,"57":1}}],["网络延迟更低",{"2":{"10":1}}],["网络游戏",{"2":{"7":1}}],["企业门户",{"2":{"14":1}}],["企业门户等",{"2":{"3":1}}],["电脑加速等功能",{"2":{"60":1}}],["电子",{"2":{"25":1}}],["电子刹车系统等等",{"2":{"25":1}}],["电子商务平台",{"2":{"3":1}}],["电商网站",{"2":{"14":1}}],["端",{"2":{"14":1,"15":1}}],["树干和树根组成的",{"2":{"12":1}}],["树枝",{"2":{"12":1}}],["树是由叶子",{"2":{"12":1}}],["游戏引擎",{"2":{"12":1,"23":1}}],["大部分杀毒软件可以同时开启杀毒",{"2":{"60":1}}],["大幅度的提升程序的执行效率",{"2":{"54":1}}],["大端存储法最常见的场景就是",{"2":{"51":1}}],["大端存储法则比较符合直觉",{"2":{"51":1}}],["大端存储法",{"0":{"51":1}}],["大小已被固定",{"2":{"42":1}}],["大数据",{"2":{"24":1}}],["大数据工程师",{"2":{"12":1}}],["大流量的场景",{"2":{"22":1}}],["大多数资源无需从服务端加载",{"2":{"10":1}}],["涌现出了各种各样的职业",{"2":{"12":1}}],["软件",{"2":{"60":1}}],["软件架构是指系统的整体设计",{"2":{"19":1}}],["软件架构",{"0":{"19":1}}],["软件行业中的各种职业方向",{"0":{"11":1},"1":{"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1}}],["软件设计架构",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1}}],["第四章",{"0":{"52":1},"1":{"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1}}],["第三章",{"0":{"26":1,"43":1},"1":{"27":1,"28":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1}}],["第三方api",{"2":{"21":1}}],["第二章",{"0":{"11":1,"40":1},"1":{"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"41":1,"42":1}}],["第一章",{"0":{"0":1,"29":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1}}],["一个进程至少要包含",{"2":{"58":1}}],["一个进程可以包含多个线程",{"2":{"58":1,"60":1}}],["一个完整的程序可能有多个子任务组成",{"2":{"58":1}}],["一个应用程序可能对应多个进程",{"2":{"57":1}}],["一个应用程序程序在运行过程中",{"2":{"10":1}}],["一个主进程负责管理",{"2":{"57":1}}],["一个程序可以启动多个进程",{"2":{"57":1}}],["一个运行中的程序通常对应一个进程",{"2":{"57":1}}],["一个线程包含执行一系列机器指令所必须的机器状态",{"2":{"56":1}}],["一共有",{"2":{"48":1}}],["一行一行的",{"2":{"46":1}}],["一旦代码被编译或准备好",{"2":{"37":1}}],["一是结婚后不谈恋爱",{"2":{"27":1}}],["一般都不是看不明白",{"2":{"27":1}}],["一般简称",{"2":{"22":1}}],["一种语言进行全栈开发",{"2":{"22":1}}],["一方面",{"2":{"14":1}}],["一些其他的优化",{"2":{"10":1}}],["脚本等",{"2":{"10":1}}],["资源加载的影响",{"2":{"10":1}}],["相关就业岗位有萎缩的趋势",{"2":{"14":1}}],["相对于专门的客户端应用程序",{"2":{"10":1}}],["相比较于",{"2":{"5":1}}],["而言",{"2":{"54":1,"57":1}}],["而全局数据区和常量区",{"2":{"42":1}}],["而将低",{"2":{"42":1}}],["而非完全替代人类的判断",{"2":{"28":1}}],["而拥有相同目标共同努力过的人天然就是最好的朋友",{"2":{"27":1}}],["而是虚拟地址",{"2":{"41":1}}],["而是由解释器逐行读取和执行代码",{"2":{"36":1}}],["而是",{"2":{"27":1}}],["而是利用技术实现需求",{"2":{"27":1}}],["而不是进程",{"2":{"58":1,"60":1}}],["而不是用户界面和交互方式",{"2":{"21":1}}],["而不要过分追求代码的结果",{"2":{"27":1}}],["而不理解知识的内涵",{"2":{"27":1}}],["而技能是指通过实践掌握的执行某种任务的能力",{"2":{"27":1}}],["而以数学原理为核心",{"2":{"24":1}}],["而且前景广阔",{"2":{"24":1}}],["而架构师主要关注于软件架构",{"2":{"20":1}}],["而复杂的处理仍由服务器端完成",{"2":{"18":1}}],["而",{"2":{"10":4,"14":1}}],["而服务器则用于处理客户端的请求和提供相应的服务",{"2":{"7":1}}],["而服务器则是一个",{"2":{"3":1}}],["性能优化",{"2":{"20":1}}],["性能更强",{"0":{"10":1}}],["性能强大",{"2":{"8":1}}],["446",{"2":{"48":2}}],["4字节",{"2":{"48":1}}],["4",{"0":{"10":1,"20":1,"23":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":1,"39":1,"50":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":2,"60":1},"1":{"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"56":1,"57":1,"58":1,"59":1,"60":1},"2":{"46":1,"47":1}}],["不随函数的结束而失效",{"2":{"42":1}}],["不能由程序员控制",{"2":{"42":1}}],["不能传递到函数外部",{"2":{"42":1}}],["不能销毁也不能增加",{"2":{"42":1}}],["不同指令会涉及不同的操作类型",{"2":{"38":1}}],["不同的前端应用",{"2":{"21":1}}],["不需要编译为机器码",{"2":{"36":1}}],["不如先搞一搞基础的数据结构与算法的实现",{"2":{"28":1}}],["不是搞创新",{"2":{"27":1}}],["不是目的",{"2":{"27":1}}],["不妨退后一步想一想",{"2":{"27":1}}],["不要无脑刷算法题",{"2":{"28":1}}],["不要看一些垃圾的书籍",{"2":{"28":1}}],["不要盲目信任",{"2":{"28":1}}],["不要使用百度搜索引擎",{"2":{"28":1}}],["不要完全相信朋友",{"2":{"27":1}}],["不要反复横跳浪费时间",{"2":{"27":1}}],["不要浪费时间死磕一个疑问",{"2":{"27":1}}],["不要钻牛角尖",{"2":{"27":1}}],["不要过于沉迷",{"2":{"27":1}}],["不要做一些学习无关的事情",{"2":{"27":1}}],["不要关心一些无关紧要的事情",{"2":{"27":1}}],["不推荐野路子半路出家走算法路线",{"2":{"24":1}}],["不便于维护",{"2":{"9":1}}],["不严谨的说",{"2":{"3":1,"7":1}}],["可能需要将整个字典从头到尾翻一遍",{"2":{"46":1}}],["可能需要针对不同平台做出不同优化",{"2":{"9":1}}],["可能现在没搞懂",{"2":{"27":1}}],["可以类比生活中的字典",{"2":{"46":1}}],["可以并行处理不同任务",{"2":{"32":1,"53":1}}],["可以加速此类操作",{"2":{"32":1}}],["可以直接处理数据运算",{"2":{"31":1}}],["可以让你的代码有品味",{"2":{"28":1}}],["可以选择",{"2":{"24":1}}],["可以降低维护难度",{"2":{"20":1}}],["可以更快速的开发和维护应用程序",{"2":{"4":1}}],["可维护性",{"2":{"20":1}}],["可维护性和稳定性",{"2":{"19":1}}],["可跨平台的",{"2":{"14":1,"15":1}}],["意味着额外的学习成本",{"2":{"9":1}}],["等架构的",{"2":{"50":1}}],["等到需要使用某个技术的时候再深入研究它",{"2":{"27":1}}],["等软件的使用没有本质区别",{"2":{"27":1}}],["等代码直接集成到后端代码中的方式来进行开发",{"2":{"14":1}}],["等",{"2":{"7":2,"12":1,"14":1,"15":1,"28":2}}],["world",{"2":{"54":1}}],["win11",{"2":{"48":1}}],["windows",{"2":{"22":1,"37":1,"57":4}}],["writeback",{"2":{"38":1}}],["wps",{"2":{"7":1}}],["web",{"2":{"3":4,"14":4}}],["qt",{"2":{"15":1}}],["qq",{"2":{"7":1,"21":2,"57":1,"60":1}}],["quot",{"2":{"3":4,"7":4,"27":2}}],["受限于浏览器的功能",{"2":{"5":1}}],["缺点",{"0":{"5":1,"9":1}}],["3s",{"2":{"45":2}}],["32gb",{"2":{"46":1}}],["32",{"2":{"42":1,"47":1,"48":5,"49":1,"50":1}}],["3",{"0":{"5":1,"6":1,"7":1,"8":1,"9":2,"16":1,"17":1,"18":1,"19":2,"20":1,"21":1,"22":1,"27":1,"28":1,"32":1,"36":1,"44":1,"45":1,"46":1,"47":2,"48":1,"49":2,"50":1,"51":1,"55":1,"56":1,"57":1,"58":2,"59":1,"60":1},"1":{"7":1,"8":1,"9":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"45":1,"46":1,"47":1,"56":1,"57":1,"58":1,"59":1,"60":1}}],["依赖于浏览器的跨平台性",{"2":{"4":1}}],["④",{"2":{"4":1,"10":1,"12":1,"14":1,"18":1,"22":1,"27":2,"28":1,"30":1,"32":1,"42":1}}],["③",{"2":{"4":1,"9":1,"10":1,"12":1,"14":1,"18":1,"19":1,"21":1,"22":1,"24":1,"27":5,"28":3,"30":1,"31":1,"32":1,"41":1,"42":2,"45":3,"48":1,"56":1,"57":1}}],["②",{"2":{"4":1,"5":1,"8":1,"9":1,"10":1,"12":1,"14":2,"15":1,"18":2,"19":2,"20":1,"21":2,"22":1,"24":1,"25":1,"27":8,"28":3,"30":1,"31":4,"32":1,"41":1,"42":2,"45":4,"46":2,"48":2,"56":1,"57":4,"58":2,"60":1}}],["兼容的浏览器即可使用该应用程序",{"2":{"4":1}}],["①",{"2":{"4":1,"5":1,"8":1,"9":1,"10":1,"12":1,"14":2,"15":1,"18":2,"19":2,"20":1,"21":2,"22":1,"24":1,"25":1,"27":8,"28":3,"30":1,"31":4,"32":1,"41":1,"42":2,"45":4,"46":2,"48":2,"56":1,"57":4,"58":2,"60":1}}],["优点",{"0":{"4":1,"8":1}}],["社交媒体网站",{"2":{"3":1,"14":1}}],["如何将这个数据保存到内存中",{"2":{"46":1}}],["如何学习",{"0":{"27":1}}],["如存储器和i",{"2":{"31":1}}],["如果将进程看做是一个工厂的话",{"2":{"59":1}}],["如果采用小端存储在内存中就是这样的",{"2":{"50":1}}],["如果要想发挥",{"2":{"54":1}}],["如果要存储到虚拟内存空间中",{"2":{"50":1}}],["如果要搜索的汉字在最后一页",{"2":{"46":1}}],["如果使用二进制实现太长了",{"2":{"48":1}}],["如果使用内存地址",{"2":{"46":1}}],["如果使用拼音查找法或部首查找法",{"2":{"46":1}}],["如果没有内存地址",{"2":{"46":1}}],["如果没有使用拼音查找法或部首查找法",{"2":{"46":1}}],["如果有一个",{"2":{"46":1}}],["如果有更新还需要及时下载安装更新",{"2":{"9":1}}],["如果你没有保存",{"2":{"45":1}}],["如果你学习",{"2":{"41":1}}],["如果我们在没有保存的过程下",{"2":{"45":1}}],["如果用户没有将数据到保存文件中",{"2":{"45":1}}],["如果程序员不释放",{"2":{"42":1}}],["如果此时",{"2":{"41":2}}],["如果想等到完全搞明白每一个技术细节",{"2":{"27":1}}],["如",{"2":{"3":1,"7":1,"12":1,"18":1,"20":1,"23":1,"24":2,"28":3,"31":2,"32":3,"35":1,"36":1,"37":1,"38":1,"39":2,"42":1,"48":1,"54":1,"57":6,"58":1,"60":1}}],["如下所示",{"2":{"3":1,"7":1,"12":1,"14":1,"30":1,"31":1,"32":1,"34":1,"41":3,"42":3,"45":3,"46":6,"47":2,"48":1,"49":1,"50":6,"54":3,"56":1,"58":4,"59":1}}],["页面",{"2":{"3":1}}],["在程序执行的时候",{"2":{"57":1}}],["在多任务的操作系统中",{"2":{"57":1}}],["在计算机专用术语中",{"2":{"56":1}}],["在计算机软件的发展过程中",{"2":{"12":1}}],["在任意时刻可以执行多个任务",{"2":{"54":1}}],["在任意时刻只能执行一条指令",{"2":{"54":1}}],["在任意时刻",{"2":{"54":1}}],["在早期",{"2":{"54":1}}],["在现代",{"2":{"53":1}}],["在现代计算机中",{"2":{"31":1}}],["在很多编译器中",{"2":{"50":1}}],["在实际生活中",{"2":{"57":1}}],["在实际开发中",{"2":{"48":1,"60":1}}],["在实际应用中",{"2":{"20":1}}],["在内存中占用",{"2":{"47":1}}],["在整个字典中去搜索我们想要了解的汉字",{"2":{"46":1}}],["在生活中",{"2":{"45":1}}],["在函数内部产生的数据只要放到堆中",{"2":{"42":1}}],["在运行时不断从内存中取出指令和数据",{"2":{"39":1}}],["在这个计算机的内存条",{"2":{"46":1}}],["在这片空间中",{"2":{"42":1}}],["在这种情况下",{"2":{"36":1,"57":1}}],["在这些领域",{"2":{"23":1}}],["在同一时刻能高效地处理多条指令",{"2":{"32":1}}],["在主板上的示意图",{"2":{"32":1}}],["在做算法题之前",{"2":{"28":1}}],["在许多情况下",{"2":{"28":1}}],["在上下游产业链中创造了大量的嵌入式就业岗位",{"2":{"25":1}}],["在算法领域最常见的用途就是图像算法",{"2":{"24":1}}],["在互联网的早期",{"2":{"14":1}}],["在自然界中",{"2":{"12":1}}],["在",{"2":{"3":1,"7":1,"14":1,"15":1,"20":2,"42":1,"47":1,"48":1,"50":3}}],["的一个核心",{"2":{"54":1}}],["的地址",{"2":{"49":1}}],["的地址指的是",{"2":{"47":1}}],["的寄存器宽度是",{"2":{"48":2}}],["的唯一标识",{"2":{"46":1}}],["的空间分配给用户程序使用",{"2":{"42":1}}],["的空间分配给内核使用",{"2":{"42":1}}],["的控制单元从内存中获取下一条指令",{"2":{"38":1}}],["的并行处理能力",{"2":{"32":1}}],["的结构中",{"2":{"53":1}}],["的结构",{"0":{"32":1}}],["的核心管理者",{"2":{"31":1}}],["的辅助作用应该仅限于提供支持",{"2":{"28":1}}],["的技术领域",{"2":{"25":1}}],["的有力竞争者",{"2":{"22":1}}],["的",{"2":{"3":2,"7":2,"48":1}}],["通常是只读的",{"2":{"42":1}}],["通常也是只读的",{"2":{"42":1}}],["通常为只读区",{"2":{"42":1}}],["通常而言",{"2":{"20":1}}],["通过创建进程和销毁进程",{"2":{"57":1}}],["通过",{"2":{"42":1}}],["通过操作系统的管理",{"2":{"39":1}}],["通过总线控制与它们通信",{"2":{"31":1}}],["通过总线接口单元与它交互",{"2":{"31":1}}],["通过死记硬背应付考试",{"2":{"27":1}}],["通过微服务或分布式架构设计",{"2":{"20":1}}],["通过架构优化",{"2":{"20":1}}],["通过服务端更新业务逻辑",{"2":{"20":1}}],["通过网络进行数据传输和交互",{"2":{"1":1}}],["通信协议进行交互",{"2":{"3":1}}],["通用浏览器",{"2":{"3":1,"7":1}}],["即接近最大的地址",{"2":{"49":1}}],["即接近",{"2":{"49":1}}],["即",{"2":{"3":1,"31":2,"47":1,"48":1,"50":2,"54":4,"57":1}}],["256",{"2":{"48":1}}],["256tb",{"2":{"42":1}}],["20",{"2":{"41":1}}],["21",{"2":{"28":1}}],["2",{"0":{"2":1,"3":1,"4":2,"5":1,"8":1,"12":1,"13":2,"14":2,"15":3,"16":1,"17":1,"18":2,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"28":1,"31":1,"35":1,"41":1,"42":2,"46":1,"48":1,"54":1,"57":1},"1":{"3":1,"4":1,"5":1,"14":2,"15":2,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"2":{"46":2,"48":2}}],["浏览器等多个应用程序",{"2":{"57":1}}],["浏览器的限制等等问题通用性是比较差的",{"2":{"21":1}}],["浏览器通过",{"2":{"18":1}}],["浏览器虽然存在缓存",{"2":{"10":1}}],["浏览器和服务器架构",{"2":{"3":1}}],["浏览器",{"2":{"1":2,"3":2,"7":1,"12":1,"23":1,"57":1}}],["bit",{"2":{"46":1}}],["biu",{"2":{"32":1}}],["branch",{"2":{"32":1}}],["browser",{"2":{"1":2}}],["bus",{"2":{"32":1}}],["business",{"2":{"19":1}}],["b",{"0":{"2":1,"14":1},"1":{"3":1,"4":1,"5":1},"2":{"1":2,"3":6,"4":1,"5":1,"7":3,"10":4,"14":2,"17":1,"18":2,"19":3,"20":3,"41":4,"46":2}}],["和其它的任务是同时执行的",{"2":{"58":1}}],["和内存地址相对应的还有一个非常重要的概念就是",{"2":{"47":1}}],["和未初始化数据段",{"2":{"42":1}}],["和输入设备一样",{"2":{"31":1}}],["和缓存",{"2":{"31":1}}],["和学",{"2":{"27":1}}],["和",{"2":{"1":2,"14":2,"20":1,"32":1,"53":1,"57":2}}],["服务器主要提供数据和必要的业务支持",{"2":{"19":1}}],["服务器负责核心业务逻辑和数据存储",{"2":{"7":1}}],["服务器",{"2":{"1":4,"3":1}}],["客户端可能会负责一些简单的数据处理和校验逻辑",{"2":{"18":1}}],["客户端开发",{"2":{"15":1}}],["客户端的计算能力",{"2":{"10":1}}],["客户端需要用户单独下载",{"2":{"9":1}}],["客户端通常较为",{"2":{"19":1}}],["客户端通常是用户直接操作的应用程序",{"2":{"7":1}}],["客户端通过浏览器访问服务器",{"2":{"3":1}}],["客户端和服务器是两个独立的组件",{"2":{"7":1}}],["客户端软件负责用户交互和部分业务逻辑",{"2":{"7":1}}],["客户端是一个",{"2":{"3":1}}],["客户端",{"2":{"1":2}}],["架构等通常变化比较少",{"2":{"21":1}}],["架构合理",{"2":{"20":1}}],["架构应用",{"2":{"17":1}}],["架构应用或",{"2":{"17":1}}],["架构应用中",{"2":{"14":1,"15":1}}],["架构师相当于树的树干部分",{"2":{"12":1}}],["架构师",{"2":{"12":1}}],["架构受限于通用浏览器的兼容性",{"2":{"10":1}}],["架构下",{"2":{"10":1}}],["架构可以使用专门优化的协议进行通信",{"2":{"10":1}}],["架构可以看成客户端是",{"2":{"3":1,"7":1}}],["架构的后端设计虽然在部署方式和交互流程上有所差异",{"2":{"20":1}}],["架构的数据传输通常基于",{"2":{"10":1}}],["架构的应用程序往往功能更强大",{"0":{"10":1}}],["架构的应用性能往往更低",{"2":{"5":1}}],["架构的应用也就具有了跨平台性",{"2":{"4":1}}],["架构是指客户端和服务器通过网络相连",{"2":{"7":1}}],["架构广泛应用于需要专属客户端的应用程序",{"2":{"7":1}}],["架构广泛应用于",{"2":{"3":1}}],["架构中架构模式的区别",{"2":{"19":1}}],["架构中业务逻辑的区别",{"2":{"18":1}}],["架构中的前端工程师",{"0":{"14":1,"15":1}}],["架构中的客户端则可以更好的使用底层",{"2":{"10":1}}],["架构中的客户端在安装的过程中",{"2":{"10":1}}],["架构中的客户端是一个拥有独立计算能力的独立应用程序",{"2":{"10":1}}],["架构中的浏览器",{"2":{"10":1}}],["架构中",{"2":{"3":1,"7":1,"20":2}}],["架构则是拥有专属",{"2":{"3":1,"7":1}}],["架构并不是完全独立的",{"2":{"3":1,"7":1}}],["架构和",{"2":{"3":1,"7":1,"18":1,"19":1,"20":1}}],["架构",{"0":{"2":1,"6":1},"1":{"3":1,"4":1,"5":1,"7":1,"8":1,"9":1},"2":{"1":4,"3":3,"5":1,"7":2,"18":2,"19":4}}],["stack",{"2":{"42":1}}],["stdout",{"2":{"41":2,"47":2,"50":2}}],["stdio",{"2":{"41":1,"47":1,"50":1,"54":1}}],["so",{"2":{"42":1}}],["soa",{"2":{"19":1}}],["setbuf",{"2":{"41":1,"47":1,"50":1}}],["server",{"2":{"1":4}}],["swift",{"2":{"15":2}}],["s",{"0":{"2":1,"6":1,"10":1,"14":1,"15":1},"1":{"3":1,"4":1,"5":1,"7":1,"8":1,"9":1},"2":{"1":4,"3":9,"4":1,"5":2,"7":9,"10":8,"14":1,"15":1,"17":2,"18":4,"19":6,"20":5}}],["clion",{"2":{"50":1}}],["client",{"2":{"1":2}}],["constant",{"2":{"42":1}}],["control",{"2":{"31":1}}],["controller",{"2":{"19":1}}],["code",{"2":{"42":1}}],["compile",{"2":{"36":1}}],["cache",{"2":{"31":1}}],["cu",{"2":{"31":1,"32":1,"53":1}}],["cpu便开始执行指令",{"2":{"38":1}}],["cpu",{"0":{"32":1,"38":1,"54":1},"2":{"30":2,"31":14,"32":4,"34":1,"38":2,"39":2,"41":1,"45":1,"48":2,"50":1,"53":2,"54":8,"57":5,"60":1}}],["c++等",{"2":{"35":1}}],["c++",{"2":{"15":1,"23":1,"24":3,"36":1}}],["css",{"2":{"14":2}}],["chrome",{"2":{"3":1,"57":1}}],["c",{"0":{"6":1,"10":1,"15":1},"1":{"7":1,"8":1,"9":1},"2":{"1":2,"3":3,"5":1,"7":6,"10":4,"15":1,"17":1,"18":2,"19":3,"20":2,"22":1,"23":1,"25":1,"28":1,"35":1,"36":1,"41":2,"47":1,"50":1,"54":1}}],["概述",{"0":{"1":1,"3":1,"7":1,"12":1,"17":1,"34":1,"41":1,"53":1,"56":1}}],["179",{"2":{"48":2}}],["17",{"2":{"48":2}}],["18",{"2":{"48":2}}],["1111",{"2":{"48":24}}],["1s",{"2":{"45":2}}],["123456",{"2":{"54":1}}],["12345678910111213",{"2":{"47":1,"50":1}}],["12345678910111213141516",{"2":{"41":1}}],["128",{"2":{"48":1}}],["128gb",{"2":{"46":1}}],["128tb",{"2":{"42":2}}],["1024",{"2":{"46":4}}],["10",{"2":{"41":1,"47":1,"50":1}}],["1",{"0":{"1":2,"2":1,"3":2,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1,"10":1,"12":1,"14":1,"17":1,"27":1,"30":2,"31":1,"32":1,"33":1,"34":2,"35":1,"36":1,"37":1,"38":1,"39":1,"41":1,"44":1,"45":2,"46":1,"47":1,"53":1,"56":1},"1":{"3":1,"4":1,"5":1,"7":1,"8":1,"9":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"45":1,"46":1,"47":1},"2":{"46":5,"58":1}}]],"serializationVersion":2}';export{t as default};
