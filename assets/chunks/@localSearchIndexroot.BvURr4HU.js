const t='{"documentCount":37,"nextId":37,"documentIds":{"0":"/java/notes/01_java-basic/01_xdx/#第一章-软件设计架构","1":"/java/notes/01_java-basic/01_xdx/#_1-1-概述","2":"/java/notes/01_java-basic/01_xdx/#_1-2-b-s-架构","3":"/java/notes/01_java-basic/01_xdx/#_1-2-1-概述","4":"/java/notes/01_java-basic/01_xdx/#_1-2-2-优点","5":"/java/notes/01_java-basic/01_xdx/#_1-2-3-缺点","6":"/java/notes/01_java-basic/01_xdx/#_1-3-c-s-架构","7":"/java/notes/01_java-basic/01_xdx/#_1-3-1-概述","8":"/java/notes/01_java-basic/01_xdx/#_1-3-2-优点","9":"/java/notes/01_java-basic/01_xdx/#_1-3-3-缺点","10":"/java/notes/01_java-basic/01_xdx/#_1-4-为什么-c-s-架构的应用程序往往功能更强大-性能更强","11":"/java/notes/01_java-basic/01_xdx/#第二章-软件行业中的各种职业方向","12":"/java/notes/01_java-basic/01_xdx/#_2-1-概述","13":"/java/notes/01_java-basic/01_xdx/#_2-2-前端工程师","14":"/java/notes/01_java-basic/01_xdx/#_2-2-1-b-s-架构中的前端工程师","15":"/java/notes/01_java-basic/01_xdx/#_2-2-2-c-s-架构中的前端工程师","16":"/java/notes/01_java-basic/01_xdx/#_2-3-后端工程师","17":"/java/notes/01_java-basic/01_xdx/#_2-3-1-概述","18":"/java/notes/01_java-basic/01_xdx/#_2-3-2-业务逻辑","19":"/java/notes/01_java-basic/01_xdx/#_2-3-3-软件架构","20":"/java/notes/01_java-basic/01_xdx/#_2-3-4-综合应用","21":"/java/notes/01_java-basic/01_xdx/#_2-3-5-后端工程师的其他工作","22":"/java/notes/01_java-basic/01_xdx/#_2-3-6-后端领域中目前主流的语言","23":"/java/notes/01_java-basic/01_xdx/#_2-4-底层开发-系统开发","24":"/java/notes/01_java-basic/01_xdx/#_2-5-算法工程师","25":"/java/notes/01_java-basic/01_xdx/#_2-6-嵌入式工程师","26":"/java/notes/01_java-basic/01_xdx/#第三章-学习建议","27":"/java/notes/01_java-basic/01_xdx/#_3-1-如何学习","28":"/java/notes/01_java-basic/01_xdx/#_3-2-实践建议","29":"/java/notes/about/#后端技术栈","30":"/java/notes/about/#前端技术栈","31":"/java/notes/about/#devops","32":"/java/notes/about/#运维技术栈","33":"/java/notes/about/#测试技术栈","34":"/java/notes/about/#开发工具","35":"/java/notes/about/#其他","36":"/java/notes/#c-c-学科"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,1],"1":[2,2,15],"2":[5,2,1],"3":[3,7,40],"4":[3,7,15],"5":[4,7,12],"6":[5,2,1],"7":[3,7,34],"8":[4,7,8],"9":[3,7,13],"10":[8,2,41],"11":[2,1,1],"12":[3,2,32],"13":[2,2,1],"14":[5,4,68],"15":[4,4,37],"16":[3,2,1],"17":[4,5,8],"18":[3,5,46],"19":[3,5,53],"20":[4,5,36],"21":[4,5,61],"22":[4,5,39],"23":[4,2,21],"24":[3,2,36],"25":[3,2,39],"26":[2,1,1],"27":[4,2,128],"28":[3,2,58],"29":[1,1,2],"30":[1,1,2],"31":[1,1,2],"32":[1,1,2],"33":[1,1,2],"34":[1,1,2],"35":[1,1,2],"36":[3,1,1]},"averageFieldLength":[3.027027027027027,3.108108108108108,23.2972972972973],"storedFields":{"0":{"title":"第一章：软件设计架构","titles":[]},"1":{"title":"1.1 概述","titles":["第一章：软件设计架构"]},"2":{"title":"1.2 B/S 架构","titles":["第一章：软件设计架构"]},"3":{"title":"1.2.1 概述","titles":["第一章：软件设计架构","1.2 B/S 架构"]},"4":{"title":"1.2.2 优点","titles":["第一章：软件设计架构","1.2 B/S 架构"]},"5":{"title":"1.2.3 缺点","titles":["第一章：软件设计架构","1.2 B/S 架构"]},"6":{"title":"1.3 C/S 架构","titles":["第一章：软件设计架构"]},"7":{"title":"1.3.1 概述","titles":["第一章：软件设计架构","1.3 C/S 架构"]},"8":{"title":"1.3.2 优点","titles":["第一章：软件设计架构","1.3 C/S 架构"]},"9":{"title":"1.3.3 缺点","titles":["第一章：软件设计架构","1.3 C/S 架构"]},"10":{"title":"1.4 为什么 C/S 架构的应用程序往往功能更强大，性能更强？","titles":["第一章：软件设计架构"]},"11":{"title":"第二章：软件行业中的各种职业方向","titles":[]},"12":{"title":"2.1 概述","titles":["第二章：软件行业中的各种职业方向"]},"13":{"title":"2.2 前端工程师","titles":["第二章：软件行业中的各种职业方向"]},"14":{"title":"2.2.1 B/S 架构中的前端工程师","titles":["第二章：软件行业中的各种职业方向","2.2 前端工程师"]},"15":{"title":"2.2.2 C/S 架构中的前端工程师","titles":["第二章：软件行业中的各种职业方向","2.2 前端工程师"]},"16":{"title":"2.3 后端工程师","titles":["第二章：软件行业中的各种职业方向"]},"17":{"title":"2.3.1 概述","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"18":{"title":"2.3.2 业务逻辑","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"19":{"title":"2.3.3 软件架构","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"20":{"title":"2.3.4 综合应用","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"21":{"title":"2.3.5 后端工程师的其他工作","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"22":{"title":"2.3.6 后端领域中目前主流的语言","titles":["第二章：软件行业中的各种职业方向","2.3 后端工程师"]},"23":{"title":"2.4 底层开发/系统开发","titles":["第二章：软件行业中的各种职业方向"]},"24":{"title":"2.5 算法工程师","titles":["第二章：软件行业中的各种职业方向"]},"25":{"title":"2.6 嵌入式工程师","titles":["第二章：软件行业中的各种职业方向"]},"26":{"title":"第三章：学习建议","titles":[]},"27":{"title":"3.1 如何学习？","titles":["第三章：学习建议"]},"28":{"title":"3.2 实践建议","titles":["第三章：学习建议"]},"29":{"title":"后端技术栈","titles":[]},"30":{"title":"前端技术栈","titles":[]},"31":{"title":"DevOps","titles":[]},"32":{"title":"运维技术栈","titles":[]},"33":{"title":"测试技术栈","titles":[]},"34":{"title":"开发工具","titles":[]},"35":{"title":"其他","titles":[]},"36":{"title":"c/c++ 学科","titles":[]}},"dirtCount":0,"index":[["测试技术栈",{"0":{"33":1}}],["运维技术栈",{"0":{"32":1}}],["运维工程师",{"2":{"12":1}}],["devops",{"0":{"31":1}}],["data",{"2":{"19":1}}],["合理的使用",{"2":{"28":1}}],["设计模式",{"2":{"28":2}}],["设计合理的业务逻辑流程和健壮的架构可以使系统更好地应对不同的业务场景和需求变化",{"2":{"20":1}}],["程序是怎样跑起来的",{"2":{"28":1}}],["代码整洁之道",{"2":{"28":1}}],["谭浩强同学的",{"2":{"28":1}}],["从入门到精通",{"2":{"28":1}}],["从而大大提高了开发效率和系统的可维护性",{"2":{"21":1}}],["xxx",{"2":{"28":1}}],["天",{"2":{"28":1}}],["品味很重要",{"2":{"28":1}}],["难道闯红灯存在就是合理的",{"2":{"28":1}}],["难以做个性化优化",{"2":{"10":1}}],["闯红灯",{"2":{"28":1}}],["确实存在一些不合理的现象",{"2":{"28":1}}],["现实生活中",{"2":{"28":1}}],["现代的",{"2":{"15":1}}],["原本应该是",{"2":{"28":1}}],["存在是有原因的",{"2":{"28":1}}],["存在即合理",{"2":{"28":1}}],["存储到数据库",{"2":{"18":1}}],["导致很多时候",{"2":{"28":1}}],["翻译的不够好",{"2":{"28":1}}],["英文翻译不合适",{"2":{"28":1}}],["英文词汇",{"2":{"28":1}}],["英语能力是非常重要的",{"2":{"28":1}}],["根本原因",{"2":{"28":1}}],["根据特定条件决定流程的下一步操作",{"2":{"18":1}}],["互联网应用乃至于整个计算机科学是建立在英语基础上的",{"2":{"28":1}}],["尽量看一些经典的书籍",{"2":{"28":1}}],["尽量看英文或中文翻译书籍",{"2":{"28":1}}],["尽快解决碰到的问题才是上上之选",{"2":{"27":1}}],["慎用",{"2":{"28":1}}],["慎用简体中文互联网学习知识",{"2":{"28":1}}],["实践建议",{"0":{"28":1}}],["边界更重要",{"2":{"27":1}}],["朋友真的很重要",{"2":{"27":1}}],["要去知识的源头学习",{"2":{"28":1}}],["要学会利用别人的经验变成自己的经验",{"2":{"27":1}}],["要学会构建自己的圈层",{"2":{"27":1}}],["要想从事这些开发岗位",{"2":{"23":1}}],["⑩",{"2":{"27":1}}],["摸鱼是浪费时间的利器",{"2":{"27":1}}],["专注是学习最好的手段",{"2":{"27":1}}],["专属客户端意味着专属操作",{"2":{"9":1}}],["专属的客户端意味着跨平台性比较差",{"2":{"9":1}}],["专属的客户端",{"2":{"8":1}}],["想休息就好好休息一下",{"2":{"27":1}}],["想不明白",{"2":{"27":1}}],["二是毕业后不再学习",{"2":{"27":1}}],["主动学习和专注学习",{"2":{"27":1}}],["主要依赖后端处理和响应",{"2":{"19":1}}],["⑨",{"2":{"27":1}}],["很多知识",{"2":{"27":1}}],["很重要",{"2":{"14":1}}],["肯定会有拨云见日的一天",{"2":{"27":1}}],["坚持学",{"2":{"27":1}}],["慢慢学",{"2":{"27":1}}],["老的知识还没有完全弄明白",{"2":{"27":1}}],["新知识纷沓而来",{"2":{"27":1}}],["新能源汽车目前发展非常迅猛",{"2":{"25":1}}],["最常碰到的问题",{"2":{"27":1}}],["初学者在学习语言",{"2":{"27":1}}],["忘了再学是很正常的",{"2":{"27":1}}],["学科",{"0":{"36":1}}],["学了忘",{"2":{"27":1}}],["学习不要急于一时",{"2":{"27":1}}],["学习不要过分扣细节",{"2":{"27":1}}],["学习语言是一个长久的过程",{"2":{"27":1}}],["学习技能的目的不是做题",{"2":{"27":1}}],["学习的本质是复读机",{"2":{"27":1}}],["学习是有界限的",{"2":{"27":1}}],["学习",{"2":{"27":3}}],["学习建议",{"0":{"26":1},"1":{"27":1,"28":1}}],["学习难度很大",{"2":{"23":1}}],["⑧",{"2":{"27":1}}],["再往后学习",{"2":{"27":1}}],["技术的学习应该追求广度",{"2":{"27":1}}],["技能强调的是理论+实践",{"2":{"27":1}}],["技能",{"2":{"27":1}}],["只关心我们能否利用手上的一切资源去完成对应的需求和功能",{"2":{"27":1}}],["只是过程和手段",{"2":{"27":2}}],["没有人关心我们是如何实现",{"2":{"27":1}}],["完成功能",{"2":{"27":1}}],["完成与前端的交互",{"2":{"21":1}}],["⑦",{"2":{"27":1}}],["解决一个别人早就解决的问题并没有什么成就感",{"2":{"27":1}}],["⑥",{"2":{"27":1}}],["追求能力的成长",{"2":{"27":1}}],["动手能力",{"2":{"27":1}}],["培养自己检索信息的能力",{"2":{"27":1}}],["站在巨人的肩膀上",{"2":{"27":1}}],["牛顿都要",{"2":{"27":1}}],["任何人终究是时间有限的",{"2":{"27":1}}],["因为这有利于我们更好的使用工具",{"2":{"27":1}}],["因此前后端界限较清晰",{"2":{"19":1}}],["因此常采用",{"2":{"19":1}}],["过度探讨问题浪费时间",{"2":{"27":1}}],["当今的科学体系",{"2":{"28":1}}],["当我们遇到困境的时候",{"2":{"27":1}}],["当然嵌入式开发往往涉及硬件交互",{"2":{"25":1}}],["当然后端的技术栈也会更复杂",{"2":{"21":1}}],["却花费大量时间在练语法",{"2":{"27":1}}],["却走错了路",{"2":{"27":1}}],["投入了大量努力",{"2":{"27":1}}],["驾驶",{"2":{"27":1}}],["烹饪",{"2":{"27":1}}],["地理等都是知识",{"2":{"27":1}}],["历史",{"2":{"27":1}}],["数学就是一种知识",{"2":{"27":1}}],["数学",{"2":{"27":1}}],["数据是一样的",{"2":{"21":1}}],["数据备份与恢复等一系列的工作",{"2":{"21":1}}],["数据加工计算",{"2":{"21":1}}],["数据处理",{"2":{"18":1}}],["数据验证和流程控制等",{"2":{"18":1}}],["数据库",{"2":{"12":1,"23":1}}],["数据传输效率更高",{"2":{"10":1}}],["教学等获取知识",{"2":{"27":1}}],["我们更是如此",{"2":{"27":1}}],["我们的目的是什么",{"2":{"27":1}}],["我们完全可以换一门编程语言来学习",{"2":{"27":1}}],["我们最终的目的是理解计算机的本质",{"2":{"27":1}}],["我们在学习数学的时候",{"2":{"27":1}}],["我们在学习英文的时候",{"2":{"27":1}}],["我们需要实践和反复练习才能掌握技能",{"2":{"27":1}}],["我们可以通过书籍",{"2":{"27":1}}],["我们知道它的原理当然会更好",{"2":{"27":1}}],["我们知道",{"2":{"12":1}}],["事实和理论",{"2":{"27":1}}],["观察或研究获得的信息",{"2":{"27":1}}],["经验",{"2":{"27":1}}],["知识是一种认知上的积累",{"2":{"27":1}}],["知识是指通过学习",{"2":{"27":1}}],["知识和技能不一样",{"2":{"27":1}}],["把计算机的使用搞熟练是一个经常被忽略但非常重要的东西",{"2":{"27":1}}],["适当深度的学习有益身心健康",{"2":{"27":1}}],["适度追剧和玩游戏有益健康",{"2":{"27":1}}],["适合复杂的大型系统",{"2":{"19":1}}],["适合用于快速开发简单的应用",{"2":{"14":1}}],["外设协议等知识",{"2":{"25":1}}],["还需要了解不少硬件",{"2":{"25":1}}],["还需要进行算法体系和代码能力的积累",{"2":{"24":1}}],["机械自动化等等",{"2":{"25":1}}],["机器学习",{"2":{"24":1}}],["工业自动化",{"2":{"25":1}}],["工作流和决策逻辑",{"2":{"18":1}}],["辅助驾驶",{"2":{"25":1}}],["汽车上的各种电子系统",{"2":{"25":1}}],["汽车领域",{"2":{"25":1}}],["车机系统",{"2":{"25":1}}],["环境监测等",{"2":{"25":1}}],["交管系统",{"2":{"25":1}}],["智慧城市",{"2":{"25":1}}],["智能穿戴设备",{"2":{"25":1}}],["农业",{"2":{"25":1}}],["自动化养殖业",{"2":{"25":1}}],["手环",{"2":{"25":1}}],["手机登录",{"2":{"21":1}}],["手机",{"2":{"7":1}}],["远程医疗器械",{"2":{"25":1}}],["华为等",{"2":{"25":1}}],["小米",{"2":{"25":1}}],["典型的智能家居",{"2":{"25":1}}],["典型的编程语言有",{"2":{"14":1}}],["iot",{"2":{"25":1}}],["ios",{"2":{"15":1}}],["物联网",{"2":{"25":1}}],["嵌入式开发的主导语言就是",{"2":{"25":1}}],["嵌入式领域的就业前景目前非常广阔",{"2":{"25":1}}],["嵌入式领域是一个专注于开发专用电子系统",{"2":{"25":1}}],["嵌入式系统",{"2":{"25":1}}],["嵌入式工程师",{"0":{"25":1},"2":{"12":1}}],["编程领域",{"2":{"28":1}}],["编程的思维等",{"2":{"27":1}}],["编程",{"2":{"27":1}}],["编程是基于计算机的一门技术",{"2":{"27":1}}],["编写的开源视觉库",{"2":{"24":1}}],["编译器",{"2":{"23":1}}],["就是翻译错误",{"2":{"28":1}}],["就是用",{"2":{"24":1}}],["就已经将需要的静态资源存在本地了",{"2":{"10":1}}],["opencv",{"2":{"24":1}}],["著名的",{"2":{"24":1}}],["建议具有良好的相关学历背景的同学从事算法岗位",{"2":{"24":1}}],["需要扎实的数学功底",{"2":{"24":1}}],["需要熟知操作系统原理",{"2":{"23":1}}],["几乎必须掌握",{"2":{"24":1}}],["几乎各行各业都需要专业的算法工程师来专注于开发和实现高效的算法来解决复杂的问题",{"2":{"24":1}}],["太卷",{"2":{"24":1}}],["由于算法岗位的专业性和重要性",{"2":{"24":1}}],["由于前端较轻",{"2":{"19":1}}],["云计算",{"2":{"24":1}}],["人生的两大悲哀",{"2":{"27":1}}],["人生最大的悲哀就在于",{"2":{"27":1}}],["人脸识别",{"2":{"24":2}}],["人工智能",{"2":{"24":1}}],["人工智能的首选语言",{"2":{"22":1}}],["算法在非算法岗位的面试中占比很低",{"2":{"28":1}}],["算法岗位的门槛比较高",{"2":{"24":1}}],["算法岗位不以编程语言为核心",{"2":{"24":1}}],["算法岗位在当今的技术领域中是非常重要且需求广泛的",{"2":{"24":1}}],["算法工程师的薪资普遍很高",{"2":{"24":1}}],["算法工程师在以下领域发挥着核心作用",{"2":{"24":1}}],["算法工程师",{"0":{"24":1},"2":{"12":1}}],["门槛是非常高的",{"2":{"23":1}}],["门槛较低",{"2":{"14":1}}],["硬件驱动",{"2":{"23":1}}],["硬件等进行优化加速",{"2":{"10":1}}],["接近硬件层面的应用开发",{"2":{"23":1}}],["接口调用和集成",{"2":{"18":1}}],["底层应用",{"2":{"23":1}}],["底层开发相当于树的树根部分",{"2":{"12":1}}],["底层开发",{"0":{"23":1},"2":{"12":1}}],["作为后起之秀是",{"2":{"22":1}}],["特别适用于高并发",{"2":{"22":1}}],["语言程序设计",{"2":{"28":1}}],["语言就是一种技能",{"2":{"27":1}}],["语言等却是技能",{"2":{"27":1}}],["语言",{"2":{"22":1,"25":1}}],["go",{"2":{"22":1}}],["golang",{"2":{"22":1}}],["google",{"2":{"15":1}}],["⑤",{"2":{"22":1,"27":1,"28":1}}],["前后端同时使用",{"2":{"22":1}}],["前端技术栈",{"0":{"30":1}}],["前端由于硬件限制",{"2":{"21":1}}],["前端主要关注于客户端应用本身",{"2":{"15":1}}],["前端主要关注于浏览器端",{"2":{"14":1}}],["前端开发入门简单",{"2":{"14":1}}],["前端发展的历史",{"2":{"14":1}}],["前端涉及到的技术有",{"2":{"14":1}}],["前端应用有",{"2":{"14":1}}],["前端",{"2":{"14":1}}],["前端工程师相当于树的叶子部分",{"2":{"12":1}}],["前端工程师",{"0":{"13":1},"1":{"14":1,"15":1},"2":{"12":1}}],["nbsp",{"2":{"29":31,"30":17,"31":12,"32":7,"33":2,"34":6,"35":4}}],["node",{"2":{"22":1}}],["native",{"2":{"15":1}}],["目前比较热门的嵌入式领域有",{"2":{"25":1}}],["目前",{"2":{"22":1}}],["平台有很好的集成和交互",{"2":{"22":1}}],["与",{"2":{"22":1}}],["与外部系统或服务进行交互",{"2":{"18":1}}],["以及一些其它软硬件知识",{"2":{"23":1}}],["以其简洁的语法和数据处理及分析上的能力而受欢迎",{"2":{"22":1}}],["以获取或提交数据",{"2":{"18":1}}],["延迟性要求低的场合中",{"2":{"22":1}}],["稳定性要求高",{"2":{"22":1}}],["业务变动快",{"2":{"22":1}}],["业务逻辑清晰",{"2":{"20":1}}],["业务逻辑和软件架构相辅相成",{"2":{"20":1}}],["业务逻辑和",{"2":{"19":1}}],["业务逻辑层和数据层",{"2":{"19":1}}],["业务逻辑可以部分在客户端实现",{"2":{"18":1}}],["业务逻辑通常完全放在服务器端",{"2":{"18":1}}],["业务逻辑的主要内容有",{"2":{"18":1}}],["业务逻辑是指系统为了满足特定业务需求所需的操作",{"2":{"18":1}}],["业务逻辑",{"0":{"18":1}}],["高并发场景多",{"2":{"22":1}}],["高度可定制化的",{"2":{"8":1}}],["尤其是在智能家居和新能源汽车领域",{"2":{"25":1}}],["尤其是在涉及电商的领域中",{"2":{"22":1}}],["尤其是移动互联网的崛起",{"2":{"14":1}}],["是西方的现代科学体系",{"2":{"28":1}}],["是工具而非决策者",{"2":{"28":1}}],["是王者",{"2":{"23":1}}],["是绝对的王者",{"2":{"22":1}}],["是最常用的后端开发语言",{"2":{"22":1}}],["是用来做网页的交互处理",{"2":{"14":1}}],["是用来做网页的视觉体验",{"2":{"14":1}}],["是用来做网页的内容结构",{"2":{"14":1}}],["成熟稳定",{"2":{"22":1}}],["6",{"0":{"22":1,"25":1}}],["多种解决方案等等",{"2":{"21":1}}],["多端互通的游戏",{"2":{"21":1}}],["各色中间件",{"2":{"21":1}}],["各种应用的编程语言",{"2":{"15":1}}],["分布式",{"2":{"21":1}}],["分为两大类",{"2":{"15":1}}],["涉及复杂的后端架构",{"2":{"21":1}}],["往往是比前端大的",{"2":{"21":1}}],["内容去进行提高和沉淀",{"2":{"21":1}}],["虽然各平台的前端展示可能不同",{"2":{"21":1}}],["虽然界面",{"2":{"21":1}}],["操作逻辑等前端部分大不相同",{"2":{"21":1}}],["操作系统",{"2":{"12":1,"23":1}}],["功能",{"2":{"21":1}}],["功能可以十分强大",{"2":{"8":1}}],["微软的亲儿子",{"2":{"22":1}}],["微信",{"2":{"21":1}}],["微信和电脑登录",{"2":{"21":1}}],["微服务架构也越来越普遍",{"2":{"19":1}}],["微服务架构",{"2":{"19":1,"21":1}}],["诸如",{"2":{"21":2}}],["都是学习工具",{"2":{"27":1}}],["都可以共用同一套后端逻辑",{"2":{"21":1}}],["都属于软件架构中比较基础和普遍的模式",{"2":{"1":1}}],["无论是网页还是桌面应用",{"2":{"21":1}}],["无论是手机还是电脑",{"2":{"21":1}}],["无需额外的学习成本",{"2":{"4":1}}],["无需安装额外软件",{"2":{"3":1}}],["并且变化不是很大",{"2":{"21":1}}],["并通过",{"2":{"3":1}}],["上述的这些东西都是可以沉淀的",{"2":{"21":1}}],["监控日志",{"2":{"21":1}}],["安全控制",{"2":{"21":1}}],["安卓端",{"2":{"15":1}}],["身份验证和授权",{"2":{"21":1}}],["短信服务等",{"2":{"21":1}}],["消息队列",{"2":{"21":1}}],["缓存",{"2":{"21":1}}],["缓存策略等",{"2":{"20":1}}],["也支持跨平台",{"2":{"22":1}}],["也是后端程序员最主要的任务之一",{"2":{"21":1}}],["也可以称为",{"2":{"14":1,"15":1}}],["处理前端请求",{"2":{"21":1}}],["5",{"0":{"21":1,"24":1}}],["有些后端工程师也会关注软件架构",{"2":{"20":1}}],["系统开发主要指的是进行一些系统层面",{"2":{"23":1}}],["系统开发",{"0":{"23":1}}],["系统可以根据业务发展灵活扩展新的服务或功能模块",{"2":{"20":1}}],["系统常用三层架构和",{"2":{"19":1}}],["扩展性",{"2":{"20":1}}],["能提升系统在高并发场景下的响应速度",{"2":{"20":1}}],["负载均衡",{"2":{"20":1}}],["所有客户端立即生效",{"2":{"20":1}}],["综合应用",{"0":{"20":1}}],["来提供较高的系统灵活性",{"2":{"19":1}}],["面向服务的架构",{"2":{"19":1}}],["呈现在客户端",{"2":{"19":1}}],["ui",{"2":{"19":1}}],["uniapp",{"2":{"15":1}}],["厚",{"2":{"19":1}}],["提供api",{"2":{"21":1}}],["提高灵活性和扩展性",{"2":{"19":1}}],["提醒",{"2":{"3":1,"7":1,"12":1,"14":2,"18":2,"19":2,"20":2,"21":2,"23":1,"24":1,"25":1,"27":10,"28":5}}],["每个服务负责不同的业务功能",{"2":{"19":1}}],["便于管理和扩展",{"2":{"19":1}}],["使得不同层次的功能更清晰",{"2":{"19":1}}],["ps",{"2":{"27":1}}],["python",{"2":{"22":1,"24":1}}],["presentation",{"2":{"19":1}}],["php",{"2":{"14":1}}],["三层架构",{"2":{"19":1}}],["视图和控制器三部分",{"2":{"19":1}}],["视频",{"2":{"10":1}}],["将系统划分为多个小型服务",{"2":{"19":1}}],["将系统分为表示层",{"2":{"19":1}}],["将系统分为模型",{"2":{"19":1}}],["将客户端和服务器分离",{"2":{"1":1}}],["view",{"2":{"19":1}}],["vue",{"2":{"14":1}}],["model",{"2":{"19":1}}],["mvc",{"2":{"19":2}}],["良好的架构可以提高系统的扩展性",{"2":{"19":1}}],["描述了系统各个模块如何协同工作",{"2":{"19":1}}],["部分在服务器实现",{"2":{"18":1}}],["请求向服务器发送数据和指令",{"2":{"18":1}}],["权限验证等",{"2":{"18":1}}],["规则校验",{"2":{"18":1}}],["转换以及持久化",{"2":{"18":1}}],["包括数据的验证",{"2":{"18":1}}],["计算机编程中的品味就是",{"2":{"28":1}}],["计算",{"2":{"18":2}}],["对数据库中的数据进行增删改查操作",{"2":{"21":1}}],["对数据的增删改查",{"2":{"18":1}}],["对于工具",{"2":{"27":1}}],["对于",{"2":{"17":1}}],["对于客户端开发",{"2":{"15":1}}],["对于开发者而言",{"2":{"9":1}}],["流程和规则",{"2":{"18":1}}],["其他",{"0":{"35":1}}],["其中",{"2":{"18":1,"19":1}}],["其计算能力和功能更受限",{"2":{"10":1}}],["后端技术栈",{"0":{"29":1}}],["后端领域中目前主流的语言",{"0":{"22":1}}],["后端的潜力",{"2":{"21":1}}],["后端的语言",{"2":{"21":1}}],["后端程序员也往往有更多的方向",{"2":{"21":1}}],["后端应用则一般具有很高的通用性",{"2":{"21":1}}],["后端完成所有处理并返回结果",{"2":{"18":1}}],["后端主要关于业务逻辑和软件架构",{"2":{"17":1}}],["后端工程师还负责与其他服务或组件交互",{"2":{"21":1}}],["后端工程师的其他工作",{"0":{"21":1}}],["后端工程师主要关注于业务逻辑",{"2":{"20":1}}],["后端工程师相当于树的树枝部分",{"2":{"12":1}}],["后端工程师",{"0":{"16":1},"1":{"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"2":{"12":1}}],["推荐的",{"2":{"15":1}}],["推动了应用的前后端分离",{"2":{"14":1}}],["kotlin",{"2":{"15":1}}],["传统的安卓开发语言",{"2":{"15":1}}],["移动客户端开发",{"2":{"15":1}}],["用于分离不同的业务功能",{"2":{"19":1}}],["用于开发",{"2":{"15":1}}],["用户界面的限制",{"2":{"21":1}}],["用户输入的格式和范围校验",{"2":{"18":1}}],["用户只要熟练使用浏览器即可",{"2":{"4":1}}],["用户仅需要一个可用的",{"2":{"4":1}}],["用户通过浏览器来访问服务器上托管的",{"2":{"3":1}}],["跨平台框架",{"2":{"15":1}}],["桌面客户端开发",{"2":{"15":1}}],["桌面应用程序",{"2":{"7":1}}],["应用广泛",{"2":{"22":1}}],["应用的更新总是最先体现在前端应用中",{"2":{"14":1}}],["应用程序越上层",{"2":{"14":1}}],["应用程序",{"2":{"3":1}}],["另一方面",{"2":{"14":1}}],["会随着审美的变化经常变动",{"2":{"14":1}}],["直接呈现给用户的部分",{"2":{"14":1}}],["且深度和复杂性也确实不及后端开发",{"2":{"14":1}}],["则变动和灵活性越大",{"2":{"14":1}}],["越接近用户",{"2":{"14":1}}],["ai",{"2":{"28":3}}],["ae",{"2":{"27":1}}],["android",{"2":{"15":1}}],["angular",{"2":{"14":1}}],["api",{"2":{"10":1}}],["apple",{"2":{"15":1}}],["app",{"2":{"7":1}}],["react",{"2":{"14":1,"15":1}}],["常见于",{"2":{"19":1}}],["常见的架构模式",{"2":{"19":1}}],["常见的",{"2":{"14":1}}],["常用框架和库",{"2":{"14":1}}],["框架崛起",{"2":{"14":1}}],["随着应用的需求越来越复杂",{"2":{"14":1}}],["但学到后面可能自然而然就懂了",{"2":{"27":1}}],["但一般也会要求至少掌握一门编程语言",{"2":{"24":1}}],["但所有的游戏数据和逻辑处理都是统一的",{"2":{"21":1}}],["但仍然都是同一个账号",{"2":{"21":1}}],["但是",{"2":{"20":1,"21":1,"27":4}}],["但都依赖于合理的业务逻辑和软件架构来满足用户需求和系统要求",{"2":{"20":1}}],["但会增加客户端的复杂性",{"2":{"18":1}}],["但对服务器的负载压力较大",{"2":{"18":1}}],["但缺点是可维护性差",{"2":{"14":1}}],["但依然需要大量从服务器端加载资源",{"2":{"10":1}}],["这时不要着急",{"2":{"27":1}}],["这种架构的通用性使得后端可以灵活地应对不同平台和设备",{"2":{"21":1}}],["这种模式更易于集中管理和更新",{"2":{"18":1}}],["这是不可能的",{"2":{"27":1}}],["这是因为后端主要关注的是业务逻辑和数据处理",{"2":{"21":1}}],["这是后端最常处理的业务逻辑",{"2":{"21":1}}],["这是应用中处理实际业务流程的核心内容",{"2":{"18":1}}],["这样做可以减轻服务器的压力",{"2":{"18":1}}],["这样做的好处是开发效率高",{"2":{"14":1}}],["这就带来了性能损耗",{"2":{"10":1}}],["它们都采取将前端",{"2":{"14":1}}],["它们通过网络进行通信",{"2":{"7":1}}],["js",{"2":{"14":3,"22":1}}],["jsp",{"2":{"14":1}}],["javascrpit",{"2":{"14":1}}],["javascript",{"2":{"14":3,"22":1}}],["java",{"2":{"14":1,"15":1,"22":3,"24":1}}],["网页应用往往前后端不分离",{"2":{"14":1}}],["网络延迟更低",{"2":{"10":1}}],["网络传输的影响",{"2":{"10":1}}],["网络游戏",{"2":{"7":1}}],["html",{"2":{"14":3}}],["https",{"2":{"3":1,"10":1}}],["http",{"2":{"3":1,"10":1,"18":1}}],["企业门户",{"2":{"14":1}}],["企业门户等",{"2":{"3":1}}],["电子",{"2":{"25":1}}],["电子刹车系统等等",{"2":{"25":1}}],["电子商务平台",{"2":{"3":1}}],["电商网站",{"2":{"14":1}}],["显示的页面和可交互的界面",{"2":{"14":1}}],["端",{"2":{"14":1,"15":1}}],["树干和树根组成的",{"2":{"12":1}}],["树枝",{"2":{"12":1}}],["树是由叶子",{"2":{"12":1}}],["游戏引擎",{"2":{"12":1,"23":1}}],["大数据",{"2":{"24":1}}],["大数据工程师",{"2":{"12":1}}],["大流量的场景",{"2":{"22":1}}],["大多数资源无需从服务端加载",{"2":{"10":1}}],["涌现出了各种各样的职业",{"2":{"12":1}}],["软件架构是指系统的整体设计",{"2":{"19":1}}],["软件架构",{"0":{"19":1}}],["软件行业中的各种职业方向",{"0":{"11":1},"1":{"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1}}],["软件设计架构",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1}}],["第三章",{"0":{"26":1},"1":{"27":1,"28":1}}],["第三方api",{"2":{"21":1}}],["第二章",{"0":{"11":1},"1":{"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1}}],["第一章",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1}}],["一是结婚后不谈恋爱",{"2":{"27":1}}],["一般都不是看不明白",{"2":{"27":1}}],["一般简称",{"2":{"22":1}}],["一种语言进行全栈开发",{"2":{"22":1}}],["一方面",{"2":{"14":1}}],["一些其他的优化",{"2":{"10":1}}],["一个应用程序程序在运行过程中",{"2":{"10":1}}],["脚本等",{"2":{"10":1}}],["图片",{"2":{"10":1}}],["总是需要加载一些静态资源的",{"2":{"10":1}}],["资源加载的影响",{"2":{"10":1}}],["协议",{"2":{"10":1}}],["相关就业岗位有萎缩的趋势",{"2":{"14":1}}],["相对于专门的客户端应用程序",{"2":{"10":1}}],["相比较于",{"2":{"5":1}}],["而非完全替代人类的判断",{"2":{"28":1}}],["而拥有相同目标共同努力过的人天然就是最好的朋友",{"2":{"27":1}}],["而是",{"2":{"27":1}}],["而是利用技术实现需求",{"2":{"27":1}}],["而不要过分追求代码的结果",{"2":{"27":1}}],["而不理解知识的内涵",{"2":{"27":1}}],["而不是用户界面和交互方式",{"2":{"21":1}}],["而技能是指通过实践掌握的执行某种任务的能力",{"2":{"27":1}}],["而以数学原理为核心",{"2":{"24":1}}],["而且前景广阔",{"2":{"24":1}}],["而架构师主要关注于软件架构",{"2":{"20":1}}],["而复杂的处理仍由服务器端完成",{"2":{"18":1}}],["而",{"2":{"10":4,"14":1}}],["而服务器则用于处理客户端的请求和提供相应的服务",{"2":{"7":1}}],["而服务器则是一个",{"2":{"3":1}}],["性能优化",{"2":{"20":1}}],["性能更强",{"0":{"10":1}}],["性能强大",{"2":{"8":1}}],["为什么",{"0":{"10":1}}],["4",{"0":{"10":1,"20":1,"23":1}}],["不如先搞一搞基础的数据结构与算法的实现",{"2":{"28":1}}],["不是搞创新",{"2":{"27":1}}],["不是目的",{"2":{"27":1}}],["不妨退后一步想一想",{"2":{"27":1}}],["不要无脑刷算法题",{"2":{"28":1}}],["不要看一些垃圾的书籍",{"2":{"28":1}}],["不要盲目信任",{"2":{"28":1}}],["不要使用百度搜索引擎",{"2":{"28":1}}],["不要完全相信朋友",{"2":{"27":1}}],["不要反复横跳浪费时间",{"2":{"27":1}}],["不要浪费时间死磕一个疑问",{"2":{"27":1}}],["不要钻牛角尖",{"2":{"27":1}}],["不要过于沉迷",{"2":{"27":1}}],["不要做一些学习无关的事情",{"2":{"27":1}}],["不要关心一些无关紧要的事情",{"2":{"27":1}}],["不推荐野路子半路出家走算法路线",{"2":{"24":1}}],["不同的前端应用",{"2":{"21":1}}],["不便于维护",{"2":{"9":1}}],["不严谨的说",{"2":{"3":1,"7":1}}],["开发工具",{"0":{"34":1}}],["开发语言",{"2":{"15":1}}],["开发的成本高",{"2":{"9":1}}],["开发者无需提供全新的客户端",{"2":{"4":1}}],["可能现在没搞懂",{"2":{"27":1}}],["可能需要针对不同平台做出不同优化",{"2":{"9":1}}],["可以让你的代码有品味",{"2":{"28":1}}],["可以选择",{"2":{"24":1}}],["可以降低维护难度",{"2":{"20":1}}],["可以更快速的开发和维护应用程序",{"2":{"4":1}}],["可维护性",{"2":{"20":1}}],["可维护性和稳定性",{"2":{"19":1}}],["可跨平台的",{"2":{"14":1,"15":1}}],["意味着额外的学习成本",{"2":{"9":1}}],["效率更高",{"2":{"8":1}}],["等到需要使用某个技术的时候再深入研究它",{"2":{"27":1}}],["等软件的使用没有本质区别",{"2":{"27":1}}],["等代码直接集成到后端代码中的方式来进行开发",{"2":{"14":1}}],["等",{"2":{"7":2,"12":1,"14":1,"15":1,"28":2}}],["windows",{"2":{"22":1}}],["wps",{"2":{"7":1}}],["web",{"2":{"3":4,"14":4}}],["qt",{"2":{"15":1}}],["qq",{"2":{"7":1,"21":2}}],["quot",{"2":{"3":4,"7":4,"27":2}}],["同样受限于浏览器",{"2":{"5":1}}],["某些高级和复杂的功能可能难以实现",{"2":{"5":1}}],["受限于浏览器的功能",{"2":{"5":1}}],["缺点",{"0":{"5":1,"9":1}}],["3",{"0":{"5":1,"6":1,"7":1,"8":1,"9":2,"16":1,"17":1,"18":1,"19":2,"20":1,"21":1,"22":1,"27":1,"28":1},"1":{"7":1,"8":1,"9":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1}}],["依赖于浏览器的跨平台性",{"2":{"4":1}}],["④",{"2":{"4":1,"10":1,"12":1,"14":1,"18":1,"22":1,"27":2,"28":1}}],["③",{"2":{"4":1,"9":1,"10":1,"12":1,"14":1,"18":1,"19":1,"21":1,"22":1,"24":1,"27":5,"28":3}}],["②",{"2":{"4":1,"5":1,"8":1,"9":1,"10":1,"12":1,"14":2,"15":1,"18":2,"19":2,"20":1,"21":2,"22":1,"24":1,"25":1,"27":8,"28":3}}],["兼容的浏览器即可使用该应用程序",{"2":{"4":1}}],["①",{"2":{"4":1,"5":1,"8":1,"9":1,"10":1,"12":1,"14":2,"15":1,"18":2,"19":2,"20":1,"21":2,"22":1,"24":1,"25":1,"27":8,"28":3}}],["优点",{"0":{"4":1,"8":1}}],["社交媒体网站",{"2":{"3":1,"14":1}}],["如果想等到完全搞明白每一个技术细节",{"2":{"27":1}}],["如果有更新还需要及时下载安装更新",{"2":{"9":1}}],["如何学习",{"0":{"27":1}}],["如",{"2":{"3":1,"7":1,"12":1,"18":1,"20":1,"23":1,"24":2,"28":3}}],["如下所示",{"2":{"3":1,"7":1,"12":1,"14":1}}],["页面",{"2":{"3":1}}],["edge",{"2":{"3":1}}],["在做算法题之前",{"2":{"28":1}}],["在许多情况下",{"2":{"28":1}}],["在上下游产业链中创造了大量的嵌入式就业岗位",{"2":{"25":1}}],["在算法领域最常见的用途就是图像算法",{"2":{"24":1}}],["在这些领域",{"2":{"23":1}}],["在实际应用中",{"2":{"20":1}}],["在互联网的早期",{"2":{"14":1}}],["在自然界中",{"2":{"12":1}}],["在计算机软件的发展过程中",{"2":{"12":1}}],["在",{"2":{"3":1,"7":1,"14":1,"15":1,"20":2}}],["的辅助作用应该仅限于提供支持",{"2":{"28":1}}],["的技术领域",{"2":{"25":1}}],["的有力竞争者",{"2":{"22":1}}],["的",{"2":{"3":2,"7":2}}],["通常而言",{"2":{"20":1}}],["通过死记硬背应付考试",{"2":{"27":1}}],["通过微服务或分布式架构设计",{"2":{"20":1}}],["通过架构优化",{"2":{"20":1}}],["通过服务端更新业务逻辑",{"2":{"20":1}}],["通过网络进行数据传输和交互",{"2":{"1":1}}],["通信协议进行交互",{"2":{"3":1}}],["通用浏览器",{"2":{"3":1,"7":1}}],["即",{"2":{"3":1}}],["21",{"2":{"28":1}}],["2",{"0":{"2":1,"3":1,"4":2,"5":1,"8":1,"12":1,"13":2,"14":2,"15":3,"16":1,"17":1,"18":2,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"28":1},"1":{"3":1,"4":1,"5":1,"14":2,"15":2,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1}}],["浏览器的限制等等问题通用性是比较差的",{"2":{"21":1}}],["浏览器通过",{"2":{"18":1}}],["浏览器虽然存在缓存",{"2":{"10":1}}],["浏览器和服务器架构",{"2":{"3":1}}],["浏览器",{"2":{"1":2,"3":2,"7":1,"12":1,"23":1}}],["business",{"2":{"19":1}}],["browser",{"2":{"1":2}}],["b",{"0":{"2":1,"14":1},"1":{"3":1,"4":1,"5":1},"2":{"1":2,"3":6,"4":1,"5":1,"7":3,"10":4,"14":2,"17":1,"18":2,"19":3,"20":3}}],["和学",{"2":{"27":1}}],["和",{"2":{"1":2,"14":2,"20":1}}],["服务器主要提供数据和必要的业务支持",{"2":{"19":1}}],["服务器负责核心业务逻辑和数据存储",{"2":{"7":1}}],["服务器",{"2":{"1":4,"3":1}}],["客户端可能会负责一些简单的数据处理和校验逻辑",{"2":{"18":1}}],["客户端开发",{"2":{"15":1}}],["客户端的计算能力",{"2":{"10":1}}],["客户端需要用户单独下载",{"2":{"9":1}}],["客户端通常较为",{"2":{"19":1}}],["客户端通常是用户直接操作的应用程序",{"2":{"7":1}}],["客户端通过浏览器访问服务器",{"2":{"3":1}}],["客户端和服务器是两个独立的组件",{"2":{"7":1}}],["客户端软件负责用户交互和部分业务逻辑",{"2":{"7":1}}],["客户端是一个",{"2":{"3":1}}],["客户端",{"2":{"1":2}}],["架构等通常变化比较少",{"2":{"21":1}}],["架构合理",{"2":{"20":1}}],["架构应用",{"2":{"17":1}}],["架构应用或",{"2":{"17":1}}],["架构应用中",{"2":{"14":1,"15":1}}],["架构师相当于树的树干部分",{"2":{"12":1}}],["架构师",{"2":{"12":1}}],["架构受限于通用浏览器的兼容性",{"2":{"10":1}}],["架构下",{"2":{"10":1}}],["架构可以使用专门优化的协议进行通信",{"2":{"10":1}}],["架构可以看成客户端是",{"2":{"3":1,"7":1}}],["架构的后端设计虽然在部署方式和交互流程上有所差异",{"2":{"20":1}}],["架构的数据传输通常基于",{"2":{"10":1}}],["架构的应用程序往往功能更强大",{"0":{"10":1}}],["架构的应用性能往往更低",{"2":{"5":1}}],["架构的应用也就具有了跨平台性",{"2":{"4":1}}],["架构是指客户端和服务器通过网络相连",{"2":{"7":1}}],["架构广泛应用于需要专属客户端的应用程序",{"2":{"7":1}}],["架构广泛应用于",{"2":{"3":1}}],["架构中架构模式的区别",{"2":{"19":1}}],["架构中业务逻辑的区别",{"2":{"18":1}}],["架构中的前端工程师",{"0":{"14":1,"15":1}}],["架构中的客户端则可以更好的使用底层",{"2":{"10":1}}],["架构中的客户端在安装的过程中",{"2":{"10":1}}],["架构中的客户端是一个拥有独立计算能力的独立应用程序",{"2":{"10":1}}],["架构中的浏览器",{"2":{"10":1}}],["架构中",{"2":{"3":1,"7":1,"20":2}}],["架构则是拥有专属",{"2":{"3":1,"7":1}}],["架构并不是完全独立的",{"2":{"3":1,"7":1}}],["架构和",{"2":{"3":1,"7":1,"18":1,"19":1,"20":1}}],["架构",{"0":{"2":1,"6":1},"1":{"3":1,"4":1,"5":1,"7":1,"8":1,"9":1},"2":{"1":4,"3":3,"5":1,"7":2,"18":2,"19":4}}],["soa",{"2":{"19":1}}],["swift",{"2":{"15":2}}],["server",{"2":{"1":4}}],["s",{"0":{"2":1,"6":1,"10":1,"14":1,"15":1},"1":{"3":1,"4":1,"5":1,"7":1,"8":1,"9":1},"2":{"1":4,"3":9,"4":1,"5":2,"7":9,"10":8,"14":1,"15":1,"17":2,"18":4,"19":6,"20":5}}],["controller",{"2":{"19":1}}],["c++",{"0":{"36":1},"2":{"15":1,"23":1,"24":3,"27":3}}],["css",{"2":{"14":2}}],["chrome",{"2":{"3":1}}],["client",{"2":{"1":2}}],["c",{"0":{"6":1,"10":1,"15":1,"36":1},"1":{"7":1,"8":1,"9":1},"2":{"1":2,"3":3,"5":1,"7":6,"10":4,"15":1,"17":1,"18":2,"19":3,"20":2,"22":1,"23":1,"25":1,"27":3,"28":1}}],["概述",{"0":{"1":1,"3":1,"7":1,"12":1,"17":1}}],["1",{"0":{"1":2,"2":1,"3":2,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1,"10":1,"12":1,"14":1,"17":1,"27":1},"1":{"3":1,"4":1,"5":1,"7":1,"8":1,"9":1}}]],"serializationVersion":2}';export{t as default};
